{
  "openapi": "3.0.2",
  "info": { "title": "Druva MSP", "version": "1.0.0", "x-logo": { "url": "" } },
  "servers": [{ "url": "https://apis.druva.com/" }],
  "paths": {
    "/msp/auth/v1/admins": {
      "get": {
        "tags": ["Admins"],
        "parameters": [
          {
            "name": "Authorization",
            "description": "Specify the Bearer access token",
            "schema": { "type": "string" },
            "in": "header",
            "required": true
          },
          {
            "name": "pageNumber",
            "description": "Specify the number of the result's page you wish to receive.",
            "schema": { "format": "int64", "default": 1, "type": "integer" },
            "in": "query"
          },
          {
            "name": "pageSize",
            "description": "Specify the number of results that can fit on one page of results.",
            "schema": {
              "format": "int64",
              "default": 25,
              "maximum": 500,
              "type": "integer"
            },
            "in": "query"
          },
          {
            "name": "search",
            "description": "Specify the part of admin's name or email by which you intend to search and list admins. Example, 'Smith' will return admin with the name of 'John Smith'.",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "sortBy",
            "description": "Specify the parameter by which you intend to sort the admin list results. The available sorting options are: \n- **id:** Sort by the admin's unique identifier.\n- **name:** Sort by the admin's first name. \n- **email:** Sort by the admin's email address. \n\nBy default, the id is used to sort the results.",
            "schema": {
              "default": "id",
              "enum": ["id", "name", "email"],
              "type": "string"
            },
            "in": "query"
          },
          {
            "name": "sortOrder",
            "description": "Specify the order in which you intend to sort admins list results.",
            "schema": {
              "default": "ASC",
              "enum": ["ASC", "DESC"],
              "type": "string"
            },
            "in": "query"
          },
          {
            "name": "filters",
            "description": "Specify the filters you wish to use for filtering admins list.",
            "schema": {
              "type": "array",
              "items": {
                "enum": ["adminIDs", "emails", "roleIDs"],
                "type": "string"
              }
            },
            "in": "query"
          },
          {
            "name": "adminIDs",
            "description": "Specify the IDs of admins you wish to list.",
            "schema": {
              "type": "array",
              "items": { "format": "int64", "type": "integer" }
            },
            "in": "query"
          },
          {
            "name": "emails",
            "description": "Specify the emails of admins you wish to list.",
            "schema": { "type": "array", "items": { "type": "string" } },
            "in": "query"
          },
          {
            "name": "roleIDs",
            "description": "Specify the role IDs of admins you wish to list.\n  - 2 - MSP Admin\n  - 3 - Tenant Admin\n  - 4 - Read Only Admin\n",
            "schema": {
              "type": "array",
              "items": {
                "format": "int64",
                "enum": [2, 3, 4],
                "type": "integer"
              }
            },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ListAdminsResponse" }
              }
            },
            "description": "Ok"
          },
          "400": { "description": "Bad Request" },
          "500": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIError" }
              }
            },
            "description": "The request was not processed due to an internal error. Kindly try again later. If the error persists, contact Druva Support."
          }
        },
        "security": [{ "Bearer": [] }],
        "operationId": "ListAdmins",
        "summary": "List all administrators",
        "description": "Returns the list of admins with their details."
      }
    },
    "/msp/v2/servicePlans": {
      "get": {
        "tags": ["Service Plans"],
        "parameters": [
          {
            "name": "Authorization",
            "description": "Specify the Bearer access token",
            "schema": { "type": "string" },
            "in": "header",
            "required": true
          },
          {
            "name": "pageSize",
            "description": "Specify the number of records you wish to receive in API response. Example - 30.",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "pageToken",
            "description": "- The token to access the next page of results. Use the token value received in the previous response's parameter 'nextPageToken'.\n- Keep this field blank in the first request.\n",
            "schema": { "type": "string" },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListServicePlansResponse"
                },
                "examples": {
                  "ListServicePlan Sample 1": {
                    "value": "{\n  \"servicePlans\": [\n    {\n      \"id\": 1,\n      \"name\": \"Default service plan\",\n      \"status\": 1,\n      \"products\": [\n        {\n          \"edition\": \"elite\",\n          \"productID\": 1,\n          \"features\": [\n            {\n              \"name\": \"string\",\n              \"isEnabled\": true,\n              \"attrs\": [\n                {\n                  \"name\": \"string\",\n                  \"value\": {}\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    },\n\t{\n      \"id\": 2,\n      \"name\": \"Sample service plan\",\n      \"status\": 1,\n      \"products\": [\n        {\n          \"edition\": \"elite\",\n          \"productID\": 1,\n          \"features\": [\n            {\n              \"name\": \"string\",\n              \"isEnabled\": true,\n              \"attrs\": [\n                {\n                  \"name\": \"string\",\n                  \"value\": {}\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"nextPageToken\": \"eyJwYWdlU2l6ZSI6IDEwMH0=\"\n}"
                  }
                }
              }
            },
            "description": "Ok"
          },
          "400": { "description": "Bad Request" },
          "401": {
            "description": "The request did not include a valid Access Token. Kindly provide a valid Access Token to process the request."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIError" }
              }
            },
            "description": "The request was not processed due to an internal error. Kindly try again later. If the error persists, contact Druva Support."
          }
        },
        "security": [{ "Bearer": [] }],
        "operationId": "ListServicePlans",
        "summary": "List all service plans",
        "description": "Returns the list of service plans configured along with the details."
      }
    },
    "/msp/v2/servicePlans/{servicePlanID}": {
      "get": {
        "tags": ["Service Plans"],
        "parameters": [
          {
            "name": "Authorization",
            "description": "Specify the Bearer access token",
            "schema": { "type": "string" },
            "in": "header",
            "required": true
          },
          {
            "name": "servicePlanID",
            "description": "Specify the unique ID of a service plan. Get the ID of a service plan using the 'List all service plans' API.",
            "schema": { "format": "int64", "type": "integer" },
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ServicePlan" }
              }
            },
            "description": "Ok"
          },
          "400": { "description": "Bad Request" },
          "401": {
            "description": "The request did not include a valid Access Token. Kindly provide a valid Access Token to process the request."
          },
          "404": { "description": "The requested resource was not found." },
          "500": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIError" }
              }
            },
            "description": "The request was not processed due to an internal error. Kindly try again later. If the error persists, contact Druva Support."
          }
        },
        "security": [{ "Bearer": [] }],
        "operationId": "GetServicePlan",
        "summary": "Get service plan",
        "description": "Returns information about a particular service plan using provided service plan ID."
      }
    },
    "/msp/v2/customers": {
      "get": {
        "tags": ["Customers"],
        "parameters": [
          {
            "name": "Authorization",
            "description": "Specify the Bearer access token",
            "schema": { "type": "string" },
            "in": "header",
            "required": true
          },
          {
            "name": "pageSize",
            "description": "Specify the number of records you wish to receive in API response. Example - 30.",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "pageToken",
            "description": "- The token to access the next page of results. Use the token value received in the previous response's parameter 'nextPageToken'. \n- Keep this field blank in the first request.\n",
            "schema": { "type": "string" },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCustomersResponse"
                },
                "examples": {
                  "ListCustomers Sample1": {
                    "value": "{\n  \"customers\": [\n    {\n      \"id\": \"bde7f8c2-d063-4a4a-9a8f-c2ea5aff42f3-198\",\n      \"accountName\": \"Druva\",\n      \"address\": \"213 Derrick Street Boston, MA 02130 USA\",\n      \"phone\": \"12345678910\",\n      \"customerName\": \"Druva\",\n      \"features\": [\n        {}\n      ],\n      \"tenantAdmins\": [\n        1,\n        2,\n        3\n      ],\n      \"status\": 1,\n      \"createdOn\": \"2022-10-25T00:00:00Z\",\n      \"activeSince\": \"2022-10-25T00:00:00Z\"\n    },\n\t{\n      \"id\": \"bde7f8c2-d063-4a4a-9a8f-c2ea5aff42f3-199\",\n      \"accountName\": \"Druvas\",\n      \"address\": \"214 Derrick Street Boston, MA 02130 USA\",\n      \"phone\": \"12345678911\",\n      \"customerName\": \"Druva-Customer\",\n      \"features\": [\n        {}\n      ],\n      \"tenantAdmins\": [\n        1,\n        3\n      ],\n      \"status\": 1,\n      \"createdOn\": \"2022-10-21T00:00:00Z\",\n      \"activeSince\": \"2022-10-21T00:00:00Z\"\n    }\n  ],\n  \"nextPageToken\": \"eyJwYWdlU2l6ZSI6IDEwMH0=\"\n}"
                  }
                }
              }
            },
            "description": "Ok"
          },
          "400": { "description": "Bad Request" },
          "401": {
            "description": "The request did not include a valid Access Token. Kindly provide a valid Access Token to process the request."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIError" }
              }
            },
            "description": "The request was not processed due to an internal error. Kindly try again later. If the error persists, contact Druva Support."
          }
        },
        "security": [{ "Bearer": [] }],
        "operationId": "GetCustomers",
        "summary": "List all customers",
        "description": "Returns the list of all customers."
      },
      "post": {
        "requestBody": {
          "description": "Specify the details for a new customer.",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateCustomerRequest" }
            }
          }
        },
        "tags": ["Customers"],
        "parameters": [
          {
            "name": "Authorization",
            "description": "Specify the Bearer access token",
            "schema": { "type": "string" },
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TaskCreatedResponse" }
              }
            },
            "description": "Ok"
          },
          "400": { "description": "Bad Request" },
          "500": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIError" }
              }
            },
            "description": "The request was not processed due to an internal error in MSP Portal Service."
          }
        },
        "security": [{ "Bearer": [] }],
        "operationId": "CreateCustomer",
        "summary": "Create a new customer",
        "description": "- Creates a new customer with provided details.\n- After you initiate the operation, it is queued and a task ID is generated. You can get the task ID from the success response. Use this task ID in the 'Get Task Details' API to track the operation's progress.\n"
      }
    },
    "/msp/v2/customers/{customerID}": {
      "get": {
        "tags": ["Customers"],
        "parameters": [
          {
            "name": "Authorization",
            "description": "Specify the Bearer access token",
            "schema": { "type": "string" },
            "in": "header",
            "required": true
          },
          {
            "name": "customerID",
            "description": "Specify the unique ID of the customer. Get the ID of the customer using the 'List all customers' API.",
            "schema": { "type": "string" },
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetCustomerResponse" }
              }
            },
            "description": "Ok"
          },
          "400": { "description": "Bad Request" },
          "401": {
            "description": "The request did not include a valid Access Token. Kindly provide a valid Access Token to process the request."
          },
          "404": { "description": "The requested resource was not found." },
          "500": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIError" }
              }
            },
            "description": "The request was not processed due to an internal error. Kindly try again later. If the error persists, contact Druva Support."
          }
        },
        "security": [{ "Bearer": [] }],
        "operationId": "GetCustomer",
        "summary": "Get customer details",
        "description": "Returns information about a customer using Customer ID."
      },
      "put": {
        "requestBody": {
          "description": "- Provide the updated details for the customer.\n- You MUST provide information for all the fields in this update request. If you do not wish to update any existing information, provide the current value for this field. You can get current values for all fields using the 'Get customer details' API.\n",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateCustomerRequest" }
            }
          }
        },
        "tags": ["Customers"],
        "parameters": [
          {
            "name": "Authorization",
            "description": "Specify the Bearer access token",
            "schema": { "type": "string" },
            "in": "header",
            "required": true
          },
          {
            "name": "customerID",
            "description": "Specify the unique ID of the customer you wish to update. Get the unique ID of the customer using the 'List all customers' API.",
            "schema": { "type": "string" },
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TaskCreatedResponse" }
              }
            },
            "description": "Ok"
          },
          "400": { "description": "Bad Request" },
          "401": {
            "description": "The request did not include a valid Access Token. Kindly provide a valid Access Token to process the request."
          },
          "404": { "description": "The requested resource was not found." },
          "500": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIError" }
              }
            },
            "description": "The request was not processed due to an internal error in MSP Portal Service."
          }
        },
        "security": [{ "Bearer": [] }],
        "operationId": "UpdateCustomerRequest",
        "summary": "Update customer details",
        "description": "Update existing customer details.\n- After you initiate the operation, it is queued and a task ID is generated. You can get the task ID from the success response. Use this task ID in the 'Get Task Details' API to track the operation's progress.\n- You must provide existing information in all the fields that do not require an update.\n"
      }
    },
    "/msp/v3/customers/{customerID}/events": {
      "get": {
        "tags": ["Events"],
        "parameters": [
          {
            "name": "Authorization",
            "description": "Specify the Bearer access token",
            "schema": { "type": "string" },
            "in": "header",
            "required": true
          },
          {
            "name": "customerID",
            "description": "Specify the unique ID of the customer. Get the ID of the customer using the 'List all customers' API.",
            "schema": { "type": "string" },
            "in": "path",
            "required": true
          },
          {
            "name": "pageSize",
            "description": "Specify the number of records you wish to receive in a single API response.\n The maximum allowed value is 500.\n Example - 30.",
            "schema": { "type": "integer", "default": 500, "maximum": 500 },
            "in": "query"
          },
          {
            "name": "pageToken",
            "description": "The token to access the next page of results. Use the token value received in the previous response's parameter 'nextPageToken'.\n Keep this field blank in the first request.\n",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "category",
            "description": "Specify the category of events to be included in response.\n",
            "schema": { "type": "string", "enum": ["EVENT", "AUDIT", "ALERT"] },
            "in": "query"
          },
          {
            "name": "type",
            "description": "Specify the type of events to be included in response.\n For all valid values of event types, please refer to : <a href=\"https://developer.druva.com/docs/events-api-for-msps#supported-druva-workloads\">Supported Druva Workloads</a>. New type of events will be added in the list with time.",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "syslogSeverity",
            "description": "Specify the syslogSeverity of events to be included in response.\n Specify the severity code as follows:\n\nFor Emergency use 0\n\nFor Alert (action must be taken immediately) use 1\n\nFor Critical (critical conditions) use 2\n\nFor Error (error conditions) use 3\n\nFor Warning (warning conditions) use 4\n\nFor Notice (normal but significant condition) use 5\n\nFor Informational (informational messages) use 6\n\nFor Debug (debug-level messages) use 7",
            "schema": { "type": "integer" },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCustomerEventsResponse"
                }
              }
            },
            "description": "Ok"
          },
          "400": { "description": "Bad Request" },
          "401": {
            "description": "The request did not include a valid Access Token. Kindly provide a valid Access Token to process the request."
          },
          "404": { "description": "The requested resource was not found." },
          "429": { "description": "Too many requests" },
          "500": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIError" }
              }
            },
            "description": "The request was not processed due to an internal error. Kindly try again later. If the error persists, contact Druva Support."
          }
        },
        "security": [{ "Bearer": [] }],
        "operationId": "GetCustomerEvents",
        "summary": "List all customer level events",
        "description": "Returns the list of all events generated at a customer level.\n- Recommended polling frequency per customer - **only once in 30 minutes**."
      }
    },
    "/msp/v2/customers/{customerID}/token": {
      "post": {
        "requestBody": {
          "description": "Generate API Access Token for a customer.",
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": { "$ref": "#/components/schemas/GenerateTokenRequest" }
            }
          }
        },
        "tags": ["Customers"],
        "parameters": [
          {
            "name": "Authorization",
            "description": "Specify the Bearer access token",
            "schema": { "type": "string" },
            "in": "header",
            "required": true
          },
          {
            "name": "customerID",
            "description": "Specify the unique ID of the customer for whom you wish to generate the API access token. Get the ID of the customer using the 'List all customers' API.",
            "schema": { "type": "string" },
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateTokenResponse"
                }
              }
            },
            "description": "Ok"
          },
          "400": { "description": "Bad Request" },
          "404": { "description": "The requested resource was not found." },
          "500": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIError" }
              }
            },
            "description": "The request was not processed due to an internal error in MSP Portal Service."
          }
        },
        "security": [{ "Bearer": [] }],
        "operationId": "Generate API access token",
        "summary": "Generate API access token for a customer",
        "description": "Use this API to generate an API access token that is unique to the customer. Use this token for accessing Druva APIs relevant to the specific customer.\n"
      }
    },
    "/msp/v2/customers/{customerID}/tenants": {
      "post": {
        "requestBody": {
          "description": "Specify the details for a new tenant.",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateTenantRequest" }
            }
          }
        },
        "tags": ["Tenants"],
        "parameters": [
          {
            "name": "Authorization",
            "description": "Specify the Bearer access token",
            "schema": { "type": "string" },
            "in": "header",
            "required": true
          },
          {
            "name": "customerID",
            "description": "Specify the unique ID of the customer for whom you wish to create a new tenant. Get the ID of the customer using the 'List all customers' API.",
            "schema": { "type": "string" },
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TaskCreatedResponse" }
              }
            },
            "description": "Ok"
          },
          "400": { "description": "Bad Request" },
          "422": { "description": "Unprocessable Entity" },
          "500": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIError" }
              }
            },
            "description": "The request was not processed due to an internal error in MSP Portal Service."
          }
        },
        "security": [{ "Bearer": [] }],
        "operationId": "CreateTenant",
        "summary": "Create a new tenant",
        "description": "- Creates a new tenant for a customer.\n- After you initiate the operation, it is queued and a task ID is generated. You can get the task ID from the success response. Use this task ID in the 'Get Task Details' API to track the operation's progress.\n- Note\n    - This API does not support the creation of a Sandbox tenant.\n    - Hybrid Workloads license is valid for eight years, while a SaaS Apps and Endpoints license is valid for three years.\n    - Storage Regions once added, cannot be removed.\n    - For SaaS Apps & Endpoint and Hybrid Workloads with Business Edition, any one storage region is supported.\n    - All features enabled in the associated Service plan will be enabled compulsorily for the tenant. Need to send those feature attributes in the API.\n    - Feature Endpoints do not support business edition.\n    - For valid products and their values, see - https://developer.druva.com/docs/msp-product-and-attribute-values\n"
      }
    },
    "/msp/v2/events": {
      "get": {
        "tags": ["Events"],
        "parameters": [
          {
            "name": "Authorization",
            "description": "Specify the Bearer access token",
            "schema": { "type": "string" },
            "in": "header",
            "required": true
          },
          {
            "name": "pageSize",
            "description": "Specify the number of records you wish to receive in a single API response.\n The maximum allowed value is 500.\n Example - 30.",
            "schema": { "type": "integer", "default": 500, "maximum": 500 },
            "in": "query"
          },
          {
            "name": "pageToken",
            "description": "The token to access the next page of results. Use the token value received in the previous response's parameter 'nextPageToken'.\n Keep this field blank in the first request.\n",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "category",
            "description": "Specify the category of events to be included in response.\n",
            "schema": { "type": "string", "enum": ["EVENT", "AUDIT", "ALERT"] },
            "in": "query"
          },
          {
            "name": "type",
            "description": "Specify the type of events to be included in response.\n For all valid values of event types, please refer to : <a href=\"https://developer.druva.com/docs/supported-msp-events\">Supported MSP Events</a>. \n New type of events will be added in the list with time.",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "syslogSeverity",
            "description": "Specify the syslogSeverity of events to be included in response.\n Specify the severity code as follows:\n\nFor Emergency use 0\n\nFor Alert (action must be taken immediately) use 1\n\nFor Critical (critical conditions) use 2\n\nFor Error (error conditions) use 3\n\nFor Warning (warning conditions) use 4\n\nFor Notice (normal but significant condition) use 5\n\nFor Informational (informational messages) use 6\n\nFor Debug (debug-level messages) use 7",
            "schema": { "type": "integer", "enum": [0, 1, 2, 3, 4, 5, 6, 7] },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListMSPEventsResponse"
                }
              }
            },
            "description": "Ok"
          },
          "400": { "description": "Bad Request" },
          "401": {
            "description": "The request did not include a valid Access Token. Kindly provide a valid Access Token to process the request."
          },
          "429": { "description": "Too many requests" },
          "500": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIError" }
              }
            },
            "description": "The request was not processed due to an internal error. Kindly try again later. If the error persists, contact Druva Support."
          },
          "503": { "description": "Service is not available" }
        },
        "security": [{ "Bearer": [] }],
        "operationId": "GetMSPEvents",
        "summary": "List all MSP level events",
        "description": "Returns the list of events generated at MSP level"
      }
    },
    "/msp/v2/tenants": {
      "get": {
        "tags": ["Tenants"],
        "parameters": [
          {
            "name": "Authorization",
            "description": "Specify the Bearer access token",
            "schema": { "type": "string" },
            "in": "header",
            "required": true
          },
          {
            "name": "pageToken",
            "description": "Specify the token to access the next page of results. Keep this field blank in the first request. Use the token value received in the previous response's parameter 'nextPageToken'.",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "customerIds",
            "description": "Specify the unique customer id for which you want to retrieve the tenant information.",
            "schema": { "type": "string" },
            "in": "query"
          },
          {
            "name": "pageSize",
            "description": "Specify the number of records you wish to receive in API response. Example - 30.",
            "schema": { "type": "string" },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetTenantsResponse" },
                "examples": {
                  "ListTenant Sample 1": {
                    "value": "{\n  \"tenants\": [\n    {\n      \"id\": \"e293b4c7-a984-4813-8fba-526d5b0edc80\",\n      \"customerID\": \"78ccbc1c-0ca0-4077-ad94-a74479c299b8\",\n      \"productID\": 2,\n      \"licenseExpiryDate\": \"2022-10-25T00:00:00Z\",\n      \"quota\": 1.5,\n      \"quotaEndDate\": \"2022-10-25T00:00:00Z\",\n      \"quotaStartDate\": \"2022-10-25T00:00:00Z\",\n      \"servicePlanID\": 1,\n      \"storageRegions\": [\n        \"us-east-1\",\n        \"us-east-2\"\n      ],\n      \"features\": [\n        {\n          \"name\": \"M365\",\n          \"attrs\": [\n            {\n              \"name\": \"userCount\",\n              \"value\": 100\n            }\n          ]\n        }\n      ],\n      \"tenantType\": 2,\n      \"status\": 1,\n      \"createdOn\": \"2022-10-25T00:00:00Z\",\n      \"activeSince\": \"2022-10-25T00:00:00Z\",\n      \"deleteDate\": \"2022-10-25T00:00:00Z\"\n    },\n\t{\n      \"id\": \"e433b4c7-a984-4813-8fba-526d5b0edc81\",\n      \"customerID\": \"91ccbc1c-0ca0-4077-ad94-a74479c299b8\",\n      \"productID\": 2,\n      \"licenseExpiryDate\": \"2022-10-25T00:00:00Z\",\n      \"quota\": 1.5,\n      \"quotaEndDate\": \"2022-10-25T00:00:00Z\",\n      \"quotaStartDate\": \"2022-10-25T00:00:00Z\",\n      \"servicePlanID\": 1,\n      \"storageRegions\": [\n        \"us-east-1\"\n      ],\n      \"features\": [\n        {\n          \"name\": \"M365\",\n          \"attrs\": [\n            {\n              \"name\": \"userCount\",\n              \"value\": 100\n            }\n          ]\n        }\n      ],\n      \"tenantType\": 2,\n      \"status\": 1,\n      \"createdOn\": \"2022-10-25T00:00:00Z\",\n      \"activeSince\": \"2022-10-25T00:00:00Z\",\n      \"deleteDate\": \"2022-10-25T00:00:00Z\"\n    }\n  ],\n  \"nextPageToken\": \"eyJwYWdlU2l6ZSI6IDEwMH0=\"\n}"
                  }
                }
              }
            },
            "description": "Ok"
          },
          "400": { "description": "Bad Request" },
          "401": {
            "description": "The request did not include a valid Access Token. Kindly provide a valid Access Token to process the request."
          },
          "404": { "description": "The requested resource was not found." },
          "500": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIError" }
              }
            },
            "description": "The request was not processed due to an internal error. Kindly try again later. If the error persists, contact Druva Support."
          }
        },
        "security": [{ "Bearer": [] }],
        "operationId": "GetTenants",
        "summary": "Get tenants list",
        "description": "Returns list of tenants."
      }
    },
    "/msp/v2/customers/{customerID}/tenants/{tenantID}": {
      "get": {
        "tags": ["Tenants"],
        "parameters": [
          {
            "name": "Authorization",
            "description": "Specify the Bearer access token",
            "schema": { "type": "string" },
            "in": "header",
            "required": true
          },
          {
            "name": "customerID",
            "description": "Specify the unique ID of a customer in MSP. Get the ID of a customer using the 'List all customers' API.",
            "schema": { "type": "string" },
            "in": "path",
            "required": true
          },
          {
            "name": "tenantID",
            "description": "Specify the unique ID of a tenant in MSP. Get the ID of a tenant using the 'List all tenants' API.",
            "schema": { "type": "string" },
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetTenantResponse" }
              }
            },
            "description": "Ok"
          },
          "400": { "description": "Bad Request" },
          "401": {
            "description": "The request did not include a valid Access Token. Kindly provide a valid Access Token to process the request."
          },
          "404": { "description": "The requested resource was not found." },
          "500": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIError" }
              }
            },
            "description": "The request was not processed due to an internal error. Kindly try again later. If the error persists, contact Druva Support."
          }
        },
        "security": [{ "Bearer": [] }],
        "operationId": "GetTenant",
        "summary": "Get tenant details",
        "description": "Returns information about a particular customer's tenant."
      },
      "put": {
        "requestBody": {
          "description": "Specify the details for a new customer.",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateTenantRequest" }
            }
          }
        },
        "tags": ["Tenants"],
        "parameters": [
          {
            "name": "Authorization",
            "description": "Specify the Bearer access token",
            "schema": { "type": "string" },
            "in": "header",
            "required": true
          },
          {
            "name": "customerID",
            "description": "Specify the ID of a customer for which you wish to update tenant. Get the ID of a customer using the 'List all customers' API.",
            "schema": { "type": "string" },
            "in": "path",
            "required": true
          },
          {
            "name": "tenantID",
            "description": "Specify the ID of a tenant for which you wish to update. Get the ID of a tenant using the 'List all tenants' API.",
            "schema": { "type": "string" },
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TaskCreatedResponse" }
              }
            },
            "description": "Ok"
          },
          "400": { "description": "Bad Request" },
          "500": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIError" }
              }
            },
            "description": "The request was not processed due to an internal error in MSP Portal Service."
          }
        },
        "security": [{ "Bearer": [] }],
        "operationId": "UpdateTenant",
        "summary": "Update an existing tenant",
        "description": "- Updates existing tenant for given customer for the MSP with given details.\n- After you initiate the operation, it is queued and a task ID is generated. You can get the task ID from the success response. Use this task ID in the 'Get Task Details' API to track the operation's progress.\n- Notes\n  - All features enabled in service plan selected will be enabled compulsorily with tenant creation as well. Need to send those feature attributes in the API. \n  - License Expiry date cannot be greater than 3 years.\n  - Storage Regions once added, will not be removed.\n  - Feature Endpoints do not support business edition.\n  - For Feature M365, business edition, there will be only 1 storage region supported.\n  - Need to provide all details even if they have not changed as per PUT api format.\n  - If a feature is enabled/disabled in service plan it can not be overridden via this API call.\n  - For valid products and their Product Features, see - https://developer.druva.com/docs/msp-product-and-attribute-values\n"
      }
    },
    "/msp/v2/customers/{customerID}/tenants/{tenantID}/suspend": {
      "post": {
        "tags": ["Tenants"],
        "parameters": [
          {
            "name": "Authorization",
            "description": "Specify the Bearer access token",
            "schema": { "type": "string" },
            "in": "header",
            "required": true
          },
          {
            "name": "customerID",
            "description": "Specify the ID of a customer whose tenant you wish to suspend . Get the ID of a customer using the 'List all customers' API.",
            "schema": { "type": "string" },
            "in": "path",
            "required": true
          },
          {
            "name": "tenantID",
            "description": "Specify the ID of a tenant which you wish to suspend . Get the ID of a tenant using the 'List all tenants' API.",
            "schema": { "type": "string" },
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TaskCreatedResponse" }
              }
            },
            "description": "Ok"
          },
          "400": { "description": "Bad Request" },
          "500": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIError" }
              }
            },
            "description": "The request was not processed due to an internal error in MSP Portal Service."
          }
        },
        "security": [{ "Bearer": [] }],
        "operationId": "SuspendTenant",
        "summary": "Suspend a customer tenant",
        "description": "Suspend a customer's tenant.\n- Note\n    - After the tenant or product is suspended, you cannot access the tenant's console.\n    - After you initiate the operation, it is queued and a task ID is generated. You can get the task ID from the success response. Use this task ID in the 'Get Task Details' API to track the operation's progress.\n"
      }
    },
    "/msp/v2/customers/{customerID}/tenants/{tenantID}/unsuspend": {
      "post": {
        "tags": ["Tenants"],
        "parameters": [
          {
            "name": "Authorization",
            "description": "Specify the Bearer access token",
            "schema": { "type": "string" },
            "in": "header",
            "required": true
          },
          {
            "name": "customerID",
            "description": "Specify the ID of a customer whose tenant you wish to un-suspend . Get the ID of a customer using the 'List all customers' API.",
            "schema": { "type": "string" },
            "in": "path",
            "required": true
          },
          {
            "name": "tenantID",
            "description": "Specify the ID of a tenant which you wish to un-suspend . Get the ID of a tenant using the 'List all tenants' API.",
            "schema": { "type": "string" },
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TaskCreatedResponse" }
              }
            },
            "description": "Ok"
          },
          "400": { "description": "Bad Request" },
          "500": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIError" }
              }
            },
            "description": "The request was not processed due to an internal error in MSP Portal Service."
          }
        },
        "security": [{ "Bearer": [] }],
        "operationId": "UnsuspendTenant",
        "summary": "Unsuspend a customer tenant",
        "description": "- Unsuspends specified customer's tenant.\n- After you initiate the operation, it is queued and a task ID is generated. You can get the task ID from the success response. Use this task ID in the 'Get Task Details' API to track the operation's progress.\n"
      }
    },
    "/msp/v2/tasks/{taskID}": {
      "get": {
        "tags": ["Tasks"],
        "parameters": [
          {
            "name": "Authorization",
            "description": "Specify the Bearer access token",
            "schema": { "type": "string" },
            "in": "header",
            "required": true
          },
          {
            "name": "taskID",
            "description": "Specify the unique ID of the task for which you want to know the current status. Task ID is received in response to the API calls made to Create a Customer, Create a Tenant, and so on.",
            "schema": { "type": "string" },
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetTaskResponse" }
              }
            },
            "description": "Ok"
          },
          "400": { "description": "Bad Request" },
          "500": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIError" }
              }
            },
            "description": "The request was not processed due to an internal error in MSP Portal Service."
          }
        },
        "security": [{ "Bearer": [] }],
        "operationId": "GetTask",
        "summary": "Get task details",
        "description": "Returns the status and additional information about a particular task using the Task ID."
      }
    },
    "/msp/v2/reports/usage/summary": {
      "get": {
        "tags": ["Reports"],
        "summary": "Get global usage report summary",
        "description": "Returns consumption units usage for a defined period.",
        "operationId": "GetGlobalUsageReportSummary",
        "parameters": [
          {
            "name": "Authorization",
            "description": "Specify the Bearer access token",
            "schema": { "type": "string" },
            "in": "header",
            "required": true
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Specify the date (YYYY-MM-DD) from which you wish to get global usage report. Default value is 30 days in the past from now.",
            "schema": { "type": "string", "format": "date-time" }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Specify the date (YYYY-MM-DD) up to which you wish to get global usage report. Default value is the current date.",
            "schema": { "type": "string", "format": "date-time" }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGlobalUsageReportSummaryResponse"
                }
              }
            }
          },
          "400": { "description": "Bad Request", "content": {} },
          "401": {
            "description": "The request did not include an authentication token or an expired authentication token was supplied.",
            "content": {}
          },
          "500": {
            "description": "The request was not processed due to an internal error.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIError" }
              }
            }
          }
        },
        "security": [{ "Bearer": [] }]
      }
    },
    "/msp/reporting/v1/reports/consumptionItemized": {
      "post": {
        "tags": ["Reports"],
        "summary": "Get Itemized Tenant Consumption Report v2.0",
        "description": "Returns a detailed, daily, report on the consumption units consumed by the MSP tenants.",
        "operationId": "GetTenantConsumptionItemizedV2",
        "parameters": [
          {
            "name": "Authorization",
            "description": "Specify the Bearer access token",
            "schema": { "type": "string" },
            "in": "header",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Specify the desired page size or filters to be applied to generate a detailed report of tenant consumption. \n :fa-info-circle: Sorting is currently not available for columns.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetTenantItemizedReportV2Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantItemizedReportV2Response"
                }
              }
            }
          },
          "400": { "description": "Bad Request", "content": {} },
          "401": {
            "description": "The request did not include an authentication token or an expired authentication token was supplied.",
            "content": {}
          },
          "500": {
            "description": "The request was not processed due to an internal error.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIError" }
              }
            }
          }
        },
        "security": [{ "Bearer": [] }]
      }
    },
    "/msp/reporting/v1/reports/quotaItemized": {
      "post": {
        "tags": ["Reports"],
        "summary": "Get Itemized Tenant Quota Report v2.0",
        "description": "Returns a detailed, daily, report on the quota usage by MSP tenants. It displays consumption based on the currently active quota. \n If there is no active quota defined, the report will show consumption from the last active quota. \n If the quota that needs to be reported is set to 0, it will be excluded from the report.",
        "operationId": "GetTenantQuotaItemizedV2",
        "parameters": [
          {
            "name": "Authorization",
            "description": "Specify the Bearer access token",
            "schema": { "type": "string" },
            "in": "header",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Specify the desired page size or filters to be applied to generate a report on the quota usage by MSP tenants. \n :fa-info-circle: Sorting is currently not available for columns.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetTenantItemizedReportV2Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantItemizedReportV2Response"
                }
              }
            }
          },
          "400": { "description": "Bad Request", "content": {} },
          "401": {
            "description": "The request did not include an authentication token or an expired authentication token was supplied.",
            "content": {}
          },
          "500": {
            "description": "The request was not processed due to an internal error.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIError" }
              }
            }
          }
        },
        "security": [{ "Bearer": [] }]
      }
    },
    "/msp/reporting/v1/reports/mspEWAlertHistory": {
      "post": {
        "tags": ["Hybrid Workloads Reports"],
        "summary": "View Alert History Report",
        "description": "Provides a view of alerts details of MSP customers as per severity and type. This API may be updated without any prior notification. Check the API documentation for the latest updates regularly.",
        "operationId": "GetAlertHistoryReportDataRequest",
        "parameters": [
          {
            "name": "Authorization",
            "description": "Specify the Bearer access token",
            "schema": { "type": "string" },
            "in": "header",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "filters": {
                    "type": "object",
                    "properties": {
                      "pageSize": {
                        "type": "integer",
                        "description": "Specify the maximum number of records that should returned in a response. Maximum limit is 500 records. Default pageSize is 100.",
                        "default": 100
                      },
                      "filterBy": {
                        "type": "array",
                        "description": "Select the filters to be applied to the report. If you do not specify a date filter, the lastUpdatedTime filter is set to 1 day by default.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "fieldName": {
                              "type": "string",
                              "description": "Specify the name of the filter.",
                              "example": "severity",
                              "enum": [
                                "customerGlobalId",
                                "accountName",
                                "customerName",
                                "generated",
                                "description",
                                "target",
                                "resolved",
                                "alertType",
                                "severity",
                                "lastUpdatedTime",
                                "organization"
                              ]
                            },
                            "operator": {
                              "type": "string",
                              "description": "Specify the operator(s) for the report. The possible values are - EQUAL, NOTEQUAL, CONTAINS, LT (less-than), LTEQ (less-than-or-equal), GT (greater-than), GTEQ (greater-than-or-equal).",
                              "example": "EQUAL",
                              "enum": [
                                "EQUAL",
                                "GT",
                                "GTE",
                                "LT",
                                "LTE",
                                "CONTAINS",
                                "NOTEQUAL"
                              ]
                            },
                            "value": {
                              "oneOf": [
                                { "type": "string", "description": "string" },
                                { "type": "integer", "description": "integer" },
                                {
                                  "type": "array",
                                  "description": "array of strings",
                                  "items": { "type": "string" }
                                },
                                {
                                  "type": "array",
                                  "description": "array of integers",
                                  "items": { "type": "integer" }
                                }
                              ],
                              "description": "Specify the value of the filter applied to the report.",
                              "example": "Warning"
                            }
                          }
                        }
                      }
                    }
                  },
                  "pageToken": {
                    "type": "string",
                    "description": "Specify the token to access the results on the next page. Keep this field blank for the first request. To view the results on the next page, use the value received in the 'nextPageToken' parameter of the previous response.",
                    "example": ""
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAlertHistoryReportDataResponse"
                }
              }
            }
          },
          "400": { "description": "Bad Request", "content": {} },
          "404": {
            "description": "The requested resource was not found.",
            "content": {}
          },
          "500": {
            "description": "The request was not processed due to an internal error.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIError" }
              }
            }
          }
        }
      }
    },
    "/msp/reporting/v1/reports/mspEWBackupActivity": {
      "post": {
        "tags": ["Hybrid Workloads Reports"],
        "summary": "View Backup Activity Report",
        "description": "Provides a comprehensive list of all backup operations performed for resources of the workloads configured in the organizations of the MSP customers. This API may be updated without any prior notification. Check the API documentation for the latest updates regularly.",
        "operationId": "GetBackupActivityReportDataRequest",
        "parameters": [
          {
            "name": "Authorization",
            "description": "Specify the Bearer access token",
            "schema": { "type": "string" },
            "in": "header",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "filters": {
                    "type": "object",
                    "properties": {
                      "pageSize": {
                        "type": "integer",
                        "description": "Specify the maximum number of records that should returned in a response. Maximum limit is 500 records. Default pageSize is 100.",
                        "default": 100
                      },
                      "filterBy": {
                        "type": "array",
                        "description": "Select the filters to be applied to the report. If you do not specify a date filter, the lastUpdatedTime filter is set to 1 day by default.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "fieldName": {
                              "type": "string",
                              "description": "Specify the name of the filter.",
                              "example": "jobID",
                              "enum": [
                                "customerGlobalId",
                                "accountName",
                                "customerName",
                                "lastUpdatedTime",
                                "ended",
                                "started",
                                "scheduled",
                                "jobID",
                                "workloads",
                                "status",
                                "backupPolicy",
                                "backupType",
                                "resourceType",
                                "vm",
                                "backupMethod",
                                "backupContent",
                                "backupMountName",
                                "scanType",
                                "backupSet",
                                "administrativeGroup",
                                "organization",
                                "details",
                                "deviceName",
                                "configurationMode"
                              ]
                            },
                            "operator": {
                              "type": "string",
                              "description": "Specify the operator(s) for the report. The possible values are - EQUAL, NOTEQUAL, CONTAINS, LT (less-than), LTEQ (less-than-or-equal), GT (greater-than), GTEQ (greater-than-or-equal).",
                              "example": "EQUAL",
                              "enum": [
                                "EQUAL",
                                "GT",
                                "GTE",
                                "LT",
                                "LTE",
                                "CONTAINS",
                                "NOTEQUAL"
                              ]
                            },
                            "value": {
                              "oneOf": [
                                { "type": "integer", "description": "integer" },
                                { "type": "string", "description": "string" },
                                {
                                  "type": "array",
                                  "description": "array of strings",
                                  "items": { "type": "string" }
                                },
                                {
                                  "type": "array",
                                  "description": "array of integers",
                                  "items": { "type": "integer" }
                                }
                              ],
                              "description": "Specify the value of the filter applied to the report.",
                              "example": "668"
                            }
                          }
                        }
                      }
                    }
                  },
                  "pageToken": {
                    "type": "string",
                    "description": "Specify the token to access the results on the next page. Keep this field blank for the first request. To view the results on the next page, use the value received in the 'nextPageToken' parameter of the previous response.",
                    "example": ""
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBackupActivityReportDataResponse"
                }
              }
            }
          },
          "400": { "description": "Bad Request", "content": {} },
          "404": {
            "description": "The requested resource was not found.",
            "content": {}
          },
          "500": {
            "description": "The request was not processed due to an internal error.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIError" }
              }
            }
          }
        }
      }
    },
    "/msp/reporting/v1/reports/mspEWResourceStatus": {
      "post": {
        "tags": ["Hybrid Workloads Reports"],
        "summary": "View Resource Status Report",
        "description": "Provides a consolidated and point-in-time status and details of all resources and associated backup sets of MSP customers. This API may be updated without any prior notification. Check the API documentation for the latest updates regularly.",
        "operationId": "GetResourceStatusReportDataRequest",
        "parameters": [
          {
            "name": "Authorization",
            "description": "Specify the Bearer access token",
            "schema": { "type": "string" },
            "in": "header",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "filters": {
                    "type": "object",
                    "properties": {
                      "pageSize": {
                        "type": "integer",
                        "description": "Specify the maximum number of records that should returned in a response. Maximum limit is 500 records. Default pageSize is 100.",
                        "default": 100
                      },
                      "filterBy": {
                        "type": "array",
                        "description": "Select the filters to be applied to the report. If you do not specify a date filter, the lastUpdatedTime filter is set to 1 day by default.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "fieldName": {
                              "type": "string",
                              "description": "Specify the name of the filter.",
                              "example": "backupsetType",
                              "enum": [
                                "customerGlobalId",
                                "accountName",
                                "customerName",
                                "backupEnabled",
                                "backupsetType",
                                "clientVersion",
                                "osVersion",
                                "resourceName",
                                "backupset",
                                "administrativeGroup",
                                "organization",
                                "lastUpdatedTime",
                                "timezone",
                                "backupContent",
                                "backupPolicy",
                                "storageTier"
                              ]
                            },
                            "operator": {
                              "type": "string",
                              "description": "Specify the operator(s) for the report. The possible values are - EQUAL, NOTEQUAL, CONTAINS, LT (less-than), LTEQ (less-than-or-equal), GT (greater-than), GTEQ (greater-than-or-equal).",
                              "example": "EQUAL",
                              "enum": [
                                "EQUAL",
                                "GT",
                                "GTE",
                                "LT",
                                "LTE",
                                "CONTAINS",
                                "NOTEQUAL"
                              ]
                            },
                            "value": {
                              "oneOf": [
                                { "type": "string", "description": "string" },
                                { "type": "integer", "description": "integer" },
                                {
                                  "type": "array",
                                  "description": "array of strings",
                                  "items": { "type": "string" }
                                },
                                {
                                  "type": "array",
                                  "description": "array of integers",
                                  "items": { "type": "integer" }
                                }
                              ],
                              "description": "Specify the value of the filter applied to the report.",
                              "example": "Files"
                            }
                          }
                        }
                      }
                    }
                  },
                  "pageToken": {
                    "type": "string",
                    "description": "Specify the token to access the results on the next page. Keep this field blank for the first request. To view the results on the next page, use the value received in the 'nextPageToken' parameter of the previous response.",
                    "example": ""
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetResourceStatusReportDataResponse"
                }
              }
            }
          },
          "400": { "description": "Bad Request", "content": {} },
          "404": {
            "description": "The requested resource was not found.",
            "content": {}
          },
          "500": {
            "description": "The request was not processed due to an internal error.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIError" }
              }
            }
          }
        }
      }
    },
    "/msp/reporting/v1/reports/mspEWStorageConsumptionbyBackupSets": {
      "post": {
        "tags": ["Hybrid Workloads Reports"],
        "summary": "View Storage Consumption by BackupSets Report",
        "description": "Lists the Backup Set wise storage consumption details for individual resources in the organization of MSP customers. This API may be updated without any prior notification. Check the API documentation for the latest updates regularly.",
        "operationId": "GetStorageConsumptionbyBackupSetsReportDataRequest",
        "parameters": [
          {
            "name": "Authorization",
            "description": "Specify the Bearer access token",
            "schema": { "type": "string" },
            "in": "header",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "filters": {
                    "type": "object",
                    "properties": {
                      "pageSize": {
                        "type": "integer",
                        "description": "Specify the maximum number of records that should returned in a response. Maximum limit is 500 records. Default pageSize is 100.",
                        "default": 100
                      },
                      "filterBy": {
                        "type": "array",
                        "description": "Select the filters to be applied to the report. If you do not specify a date filter, the lastUpdatedTime filter is set to 1 day by default.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "fieldName": {
                              "type": "string",
                              "description": "Specify the name of the filter.",
                              "example": "organization",
                              "enum": [
                                "customerGlobalId",
                                "accountName",
                                "customerName",
                                "lastUpdatedTime",
                                "currentSource",
                                "estimatedStorage",
                                "sourceChanges",
                                "storageSourceReductionFactor",
                                "backupPolicy",
                                "backupContent",
                                "backupSetType",
                                "backupSet",
                                "administrativeGroup",
                                "organization",
                                "storageTier",
                                "warmThreshold"
                              ]
                            },
                            "operator": {
                              "type": "string",
                              "description": "Specify the operator(s) for the report. The possible values are - EQUAL, NOTEQUAL, CONTAINS, LT (less-than), LTEQ (less-than-or-equal), GT (greater-than), GTEQ (greater-than-or-equal).",
                              "example": "LT",
                              "enum": [
                                "EQUAL",
                                "GT",
                                "GTE",
                                "LT",
                                "LTE",
                                "CONTAINS",
                                "NOTEQUAL"
                              ]
                            },
                            "value": {
                              "oneOf": [
                                { "type": "string", "description": "string" },
                                { "type": "integer", "description": "integer" },
                                {
                                  "type": "array",
                                  "description": "array of strings",
                                  "items": { "type": "string" }
                                },
                                {
                                  "type": "array",
                                  "description": "array of integers",
                                  "items": { "type": "integer" }
                                }
                              ],
                              "description": "Specify the value of the filter applied to the report.",
                              "example": "org_2"
                            }
                          }
                        }
                      }
                    }
                  },
                  "pageToken": {
                    "type": "string",
                    "description": "Specify the token to access the results on the next page. Keep this field blank for the first request. To view the results on the next page, use the value received in the 'nextPageToken' parameter of the previous response.",
                    "example": ""
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStorageConsumptionbyBackupSetsReportDataResponse"
                }
              }
            }
          },
          "400": { "description": "Bad Request", "content": {} },
          "404": {
            "description": "The requested resource was not found.",
            "content": {}
          },
          "500": {
            "description": "The request was not processed due to an internal error.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIError" }
              }
            }
          }
        }
      }
    },
    "/msp/reporting/v1/reports/mspEWDisasterRecoveryReplicationActivity": {
      "post": {
        "tags": ["Hybrid Workloads Reports"],
        "summary": "View Disaster Recovery Replication Activity Report",
        "description": "Provides a consolidated view of  DR restore job completion summary as per status and details of all replications of MSP customers. This API may be updated without any prior notification. Check the API documentation for the latest updates regularly.",
        "operationId": "GetDisasterRecoveryReplicationActivityReportDataRequest",
        "parameters": [
          {
            "name": "Authorization",
            "description": "Specify the Bearer access token",
            "schema": { "type": "string" },
            "in": "header",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "filters": {
                    "type": "object",
                    "properties": {
                      "pageSize": {
                        "type": "integer",
                        "description": "Specify the maximum number of records that should returned in a response. Maximum limit is 500 records. Default pageSize is 100.",
                        "default": 100
                      },
                      "filterBy": {
                        "type": "array",
                        "description": "Select the filters to be applied to the report. If you do not specify a date filter, the lastUpdatedTime filter is set to 1 day by default.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "fieldName": {
                              "type": "string",
                              "description": "Specify the name of the filter.",
                              "example": "lastUpdatedTime",
                              "enum": [
                                "customerGlobalId",
                                "accountName",
                                "customerName",
                                "lastUpdatedTime",
                                "ended",
                                "started",
                                "scheduled",
                                "jobID",
                                "details",
                                "awsAccountAndRegion",
                                "status",
                                "vm",
                                "drPlanName",
                                "organization"
                              ]
                            },
                            "operator": {
                              "type": "string",
                              "description": "Specify the operator(s) for the report. The possible values are - EQUAL, NOTEQUAL, CONTAINS, LT (less-than), LTEQ (less-than-or-equal), GT (greater-than), GTEQ (greater-than-or-equal).",
                              "example": "GTE",
                              "enum": [
                                "EQUAL",
                                "GT",
                                "GTE",
                                "LT",
                                "LTE",
                                "CONTAINS",
                                "NOTEQUAL"
                              ]
                            },
                            "value": {
                              "oneOf": [
                                { "type": "string", "description": "string" },
                                { "type": "integer", "description": "integer" },
                                {
                                  "type": "array",
                                  "description": "array of strings",
                                  "items": { "type": "string" }
                                },
                                {
                                  "type": "array",
                                  "description": "array of integers",
                                  "items": { "type": "integer" }
                                }
                              ],
                              "description": "Specify the value of the filter applied to the report.",
                              "example": "2023-06-04T08:37:28.593Z"
                            }
                          }
                        }
                      }
                    }
                  },
                  "pageToken": {
                    "type": "string",
                    "description": "Specify the token to access the results on the next page. Keep this field blank for the first request. To view the results on the next page, use the value received in the 'nextPageToken' parameter of the previous response.",
                    "example": ""
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDisasterRecoveryReplicationActivityReportDataResponse"
                }
              }
            }
          },
          "400": { "description": "Bad Request", "content": {} },
          "404": {
            "description": "The requested resource was not found.",
            "content": {}
          },
          "500": {
            "description": "The request was not processed due to an internal error.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIError" }
              }
            }
          }
        }
      }
    },
    "/msp/reporting/v1/reports/mspEWDisasterRecoveryFailbackActivity": {
      "post": {
        "tags": ["Hybrid Workloads Reports"],
        "summary": "View Disaster Recovery Failback Activity Report",
        "description": "Provides details of the failback jobs triggered for the failed over EC2 instances in the organization of MSP customers. This API may be updated without any prior notification. Check the API documentation for the latest updates regularly.",
        "operationId": "GetDisasterRecoveryFailbackActivityReportDataRequest",
        "parameters": [
          {
            "name": "Authorization",
            "description": "Specify the Bearer access token",
            "schema": { "type": "string" },
            "in": "header",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "filters": {
                    "type": "object",
                    "properties": {
                      "pageSize": {
                        "type": "integer",
                        "description": "Specify the maximum number of records that should returned in a response. Maximum limit is 500 records. Default pageSize is 100.",
                        "default": 100
                      },
                      "filterBy": {
                        "type": "array",
                        "description": "Select the filters to be applied to the report. If you do not specify a date filter, the lastUpdatedTime filter is set to 1 day by default.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "fieldName": {
                              "type": "string",
                              "description": "Specify the name of the filter.",
                              "example": "jobID",
                              "enum": [
                                "customerGlobalId",
                                "accountName",
                                "customerName",
                                "lastUpdatedTime",
                                "ended",
                                "started",
                                "jobID",
                                "details",
                                "destinationVCenterESXi",
                                "organization",
                                "drPlanName"
                              ]
                            },
                            "operator": {
                              "type": "string",
                              "description": "Specify the operator(s) for the report. The possible values are - EQUAL, NOTEQUAL, CONTAINS, LT (less-than), LTEQ (less-than-or-equal), GT (greater-than), GTEQ (greater-than-or-equal).",
                              "example": "EQUAL",
                              "enum": [
                                "EQUAL",
                                "GT",
                                "GTE",
                                "LT",
                                "LTE",
                                "CONTAINS",
                                "NOTEQUAL"
                              ]
                            },
                            "value": {
                              "oneOf": [
                                { "type": "integer", "description": "integer" },
                                { "type": "string", "description": "string" },
                                {
                                  "type": "array",
                                  "description": "array of strings",
                                  "items": { "type": "string" }
                                },
                                {
                                  "type": "array",
                                  "description": "array of integers",
                                  "items": { "type": "integer" }
                                }
                              ],
                              "description": "Specify the value of the filter applied to the report.",
                              "example": "1001"
                            }
                          }
                        }
                      }
                    }
                  },
                  "pageToken": {
                    "type": "string",
                    "description": "Specify the token to access the results on the next page. Keep this field blank for the first request. To view the results on the next page, use the value received in the 'nextPageToken' parameter of the previous response.",
                    "example": ""
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDisasterRecoveryFailbackActivityReportDataResponse"
                }
              }
            }
          },
          "400": { "description": "Bad Request", "content": {} },
          "404": {
            "description": "The requested resource was not found.",
            "content": {}
          },
          "500": {
            "description": "The request was not processed due to an internal error.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIError" }
              }
            }
          }
        }
      }
    },
    "/msp/reporting/v1/reports/mspEWDisasterRecoveryFailoverActivity": {
      "post": {
        "tags": ["Hybrid Workloads Reports"],
        "summary": "View Disaster Recovery Failover Activity Report",
        "description": "Provides a consolidated view of DR failover job completion summary as per the status and details of all DR failovers of MSP customers. This API may be updated without any prior notification. Check the API documentation for the latest updates regularly.",
        "operationId": "GetDisasterRecoveryFailoverActivityReportDataRequest",
        "parameters": [
          {
            "name": "Authorization",
            "description": "Specify the Bearer access token",
            "schema": { "type": "string" },
            "in": "header",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "filters": {
                    "type": "object",
                    "properties": {
                      "pageSize": {
                        "type": "integer",
                        "description": "Specify the maximum number of records that should returned in a response. Maximum limit is 500 records. Default pageSize is 100.",
                        "default": 100
                      },
                      "filterBy": {
                        "type": "array",
                        "description": "Select the filters to be applied to the report. If you do not specify a date filter, the lastUpdatedTime filter is set to 1 day by default.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "fieldName": {
                              "type": "string",
                              "description": "Specify the name of the filter.",
                              "example": "vmName",
                              "enum": [
                                "customerGlobalId",
                                "accountName",
                                "customerName",
                                "lastUpdatedTime",
                                "duration",
                                "ended",
                                "started",
                                "jobID",
                                "status",
                                "instanceDetails",
                                "failoverEndTime",
                                "failoverStartTime",
                                "vmName",
                                "recoveryStep",
                                "details"
                              ]
                            },
                            "operator": {
                              "type": "string",
                              "description": "Specify the operator(s) for the report. The possible values are - EQUAL, NOTEQUAL, CONTAINS, LT (less-than), LTEQ (less-than-or-equal), GT (greater-than), GTEQ (greater-than-or-equal).",
                              "example": "EQUAL",
                              "enum": [
                                "EQUAL",
                                "GT",
                                "GTE",
                                "LT",
                                "LTE",
                                "CONTAINS",
                                "NOTEQUAL"
                              ]
                            },
                            "value": {
                              "oneOf": [
                                { "type": "string", "description": "string" },
                                { "type": "integer", "description": "integer" },
                                {
                                  "type": "array",
                                  "description": "array of strings",
                                  "items": { "type": "string" }
                                },
                                {
                                  "type": "array",
                                  "description": "array of integers",
                                  "items": { "type": "integer" }
                                }
                              ],
                              "description": "Specify the value of the filter applied to the report.",
                              "example": "vm-123"
                            }
                          }
                        }
                      }
                    }
                  },
                  "pageToken": {
                    "type": "string",
                    "description": "Specify the token to access the results on the next page. Keep this field blank for the first request. To view the results on the next page, use the value received in the 'nextPageToken' parameter of the previous response.",
                    "example": ""
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDisasterRecoveryFailoverActivityReportDataResponse"
                }
              }
            }
          },
          "400": { "description": "Bad Request", "content": {} },
          "404": {
            "description": "The requested resource was not found.",
            "content": {}
          },
          "500": {
            "description": "The request was not processed due to an internal error.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIError" }
              }
            }
          }
        }
      }
    },
    "/msp/reporting/v1/reports/mspEPAlert": {
      "post": {
        "tags": ["Endpoints Reports"],
        "summary": "View Alert Report",
        "description": "This report provides details about all alerts generated for MSP customers. Specify the status of the alert to narrow down the data in your report. This filter parameter can have one of the following values: \n\n **Yes:** To retrieve data for active alerts only. It lists the currently triggered alerts that require your attention. \n\n **No:** To retrieve data for resolved or deleted alerts only. \n\nThis API may be updated without any prior notification. Check the API documentation for the latest updates regularly.",
        "operationId": "GetAlertReportDataRequest",
        "parameters": [
          {
            "name": "Authorization",
            "description": "Specify the Bearer access token",
            "schema": { "type": "string" },
            "in": "header",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "filters": {
                    "type": "object",
                    "properties": {
                      "pageSize": {
                        "type": "integer",
                        "description": "Specify the maximum number of records that should returned in a response. Maximum limit is 500 records. Default pageSize is 100.",
                        "default": 100
                      },
                      "filterBy": {
                        "type": "array",
                        "description": "Select the filters to be applied to the report.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "fieldName": {
                              "type": "string",
                              "description": "Specify the name of the filter.",
                              "example": "lastOccurance",
                              "enum": [
                                "customerGlobalId",
                                "accountName",
                                "customerName",
                                "entity",
                                "alertDetails",
                                "firstOccurrence",
                                "lastOccurrence",
                                "active",
                                "severity"
                              ]
                            },
                            "operator": {
                              "type": "string",
                              "description": "The operators that are supported for the filter are - EQUAL, NOTEQUAL, CONTAINS, LT (less-than), LTEQ (less-than-or-equal), GT (greater-than), GTEQ (greater-than-or-equal).",
                              "example": "LT",
                              "enum": [
                                "EQUAL",
                                "GT",
                                "GTE",
                                "LT",
                                "LTE",
                                "CONTAINS",
                                "NOTEQUAL"
                              ]
                            },
                            "value": {
                              "oneOf": [
                                { "type": "string", "description": "string" },
                                { "type": "integer", "description": "integer" },
                                {
                                  "type": "array",
                                  "description": "array of strings",
                                  "items": { "type": "string" }
                                },
                                {
                                  "type": "array",
                                  "description": "array of integers",
                                  "items": { "type": "integer" }
                                }
                              ],
                              "description": "Specify the value of the filter applied to the report.",
                              "example": "2023-01-03T13:50:35.369Z"
                            }
                          }
                        }
                      }
                    }
                  },
                  "pageToken": {
                    "type": "string",
                    "description": "Specify the token to access the results on the next page. Keep this field blank for the first request. To view the results on the next page, use the value received in the 'nextPageToken' parameter of the previous response.",
                    "example": ""
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAlertReportDataResponse"
                }
              }
            }
          },
          "400": { "description": "Bad Request", "content": {} },
          "404": {
            "description": "The requested resource was not found.",
            "content": {}
          },
          "500": {
            "description": "The request was not processed due to an internal error.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIError" }
              }
            }
          }
        }
      }
    },
    "/msp/reporting/v1/reports/mspEPUsers": {
      "post": {
        "tags": ["Endpoints Reports"],
        "summary": "View Users Report",
        "description": "This report provides count of users added, deleted, and preserved for a specified period of MSP customers. This API may be updated without any prior notification. Check the API documentation for the latest updates regularly.",
        "operationId": "GetUsersReportDataRequest",
        "parameters": [
          {
            "name": "Authorization",
            "description": "Specify the Bearer access token",
            "schema": { "type": "string" },
            "in": "header",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "filters": {
                    "type": "object",
                    "properties": {
                      "pageSize": {
                        "type": "integer",
                        "description": "Specify the maximum number of records that should returned in a response. Maximum limit is 500 records. Default pageSize is 100.",
                        "default": 100
                      },
                      "filterBy": {
                        "type": "array",
                        "description": "Select the filters to be applied to the report.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "fieldName": {
                              "type": "string",
                              "description": "Specify the name of the filter.",
                              "example": "usersPreserved",
                              "enum": [
                                "customerGlobalId",
                                "accountName",
                                "customerName",
                                "fromDate",
                                "toDate",
                                "totalUsers",
                                "totalPreservedUsers",
                                "usersAdded",
                                "usersDeleted",
                                "usersPreserved"
                              ]
                            },
                            "operator": {
                              "type": "string",
                              "description": "The operators that are supported for the filter are - EQUAL, NOTEQUAL, CONTAINS, LT (less-than), LTEQ (less-than-or-equal), GT (greater-than), GTEQ (greater-than-or-equal).",
                              "example": "EQUAL",
                              "enum": [
                                "EQUAL",
                                "GT",
                                "GTE",
                                "LT",
                                "LTE",
                                "CONTAINS",
                                "NOTEQUAL"
                              ]
                            },
                            "value": {
                              "oneOf": [
                                { "type": "string", "description": "string" },
                                { "type": "integer", "description": "integer" },
                                {
                                  "type": "array",
                                  "description": "array of strings",
                                  "items": { "type": "string" }
                                },
                                {
                                  "type": "array",
                                  "description": "array of integers",
                                  "items": { "type": "integer" }
                                }
                              ],
                              "description": "Specify the value of the filter applied to the report.",
                              "example": "3"
                            }
                          }
                        }
                      }
                    }
                  },
                  "pageToken": {
                    "type": "string",
                    "description": "Specify the token to access the results on the next page. Keep this field blank for the first request. To view the results on the next page, use the value received in the 'nextPageToken' parameter of the previous response.",
                    "example": ""
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUsersReportDataResponse"
                }
              }
            }
          },
          "400": { "description": "Bad Request", "content": {} },
          "404": {
            "description": "The requested resource was not found.",
            "content": {}
          },
          "500": {
            "description": "The request was not processed due to an internal error.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIError" }
              }
            }
          }
        }
      }
    },
    "/msp/reporting/v1/reports/mspEPLicenseUsage": {
      "post": {
        "tags": ["Endpoints Reports"],
        "summary": "View License Usage Report",
        "description": "This report provides details of total users added and deleted, total Endpoints active and preserve licenses allocated for MSP customers. This API may be updated without any prior notification. Check the API documentation for the latest updates regularly.",
        "operationId": "GetLicenseUsageReportDataRequest",
        "parameters": [
          {
            "name": "Authorization",
            "description": "Specify the Bearer access token",
            "schema": { "type": "string" },
            "in": "header",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "filters": {
                    "type": "object",
                    "properties": {
                      "pageSize": {
                        "type": "integer",
                        "description": "Specify the maximum number of records that should returned in a response. Maximum limit is 500 records. Default pageSize is 100.",
                        "default": 100
                      },
                      "filterBy": {
                        "type": "array",
                        "description": "Select the filters to be applied to the report.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "fieldName": {
                              "type": "string",
                              "description": "Specify the name of the filter.",
                              "example": "fromDate",
                              "enum": [
                                "customerGlobalId",
                                "accountName",
                                "customerName",
                                "fromDate",
                                "toDate",
                                "usersAdded",
                                "usersDeleted",
                                "totalActiveLicense",
                                "activeLicenseUsed",
                                "totalPreservedLicense",
                                "preservedLicenseUsed"
                              ]
                            },
                            "operator": {
                              "type": "string",
                              "description": "The operators that are supported for the filter are - EQUAL, NOTEQUAL, CONTAINS, LT (less-than), LTEQ (less-than-or-equal), GT (greater-than), GTEQ (greater-than-or-equal).",
                              "example": "EQUAL",
                              "enum": [
                                "EQUAL",
                                "GT",
                                "GTE",
                                "LT",
                                "LTE",
                                "CONTAINS",
                                "NOTEQUAL"
                              ]
                            },
                            "value": {
                              "oneOf": [
                                { "type": "string", "description": "string" },
                                { "type": "integer", "description": "integer" },
                                {
                                  "type": "array",
                                  "description": "array of strings",
                                  "items": { "type": "string" }
                                },
                                {
                                  "type": "array",
                                  "description": "array of integers",
                                  "items": { "type": "integer" }
                                }
                              ],
                              "description": "Specify the value of the filter applied to the report.",
                              "example": "2022-06-03T14:34:11.532Z"
                            }
                          }
                        }
                      }
                    }
                  },
                  "pageToken": {
                    "type": "string",
                    "description": "Specify the token to access the results on the next page. Keep this field blank for the first request. To view the results on the next page, use the value received in the 'nextPageToken' parameter of the previous response.",
                    "example": ""
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLicenseUsageReportDataResponse"
                }
              }
            }
          },
          "400": { "description": "Bad Request", "content": {} },
          "404": {
            "description": "The requested resource was not found.",
            "content": {}
          },
          "500": {
            "description": "The request was not processed due to an internal error.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIError" }
              }
            }
          }
        }
      }
    },
    "/msp/reporting/v1/reports/mspEPUserProvisioning": {
      "post": {
        "tags": ["Endpoints Reports"],
        "summary": "View User Provisioning Report",
        "description": "The User Provisioning report provides information about the users provisioned in Endpoints for MSP customers. This API may be updated without any prior notification. Check the API documentation for the latest updates regularly.",
        "operationId": "GetUserProvisioningReportDataRequest",
        "parameters": [
          {
            "name": "Authorization",
            "description": "Specify the Bearer access token",
            "schema": { "type": "string" },
            "in": "header",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "filters": {
                    "type": "object",
                    "properties": {
                      "pageSize": {
                        "type": "integer",
                        "description": "Specify the maximum number of records that should returned in a response. Maximum limit is 500 records. Default pageSize is 100.",
                        "default": 100
                      },
                      "filterBy": {
                        "type": "array",
                        "description": "Select the filters to be applied to the report. If you do not specify a date filter, the lastUpdatedTime filter is set to 1 day by default.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "fieldName": {
                              "type": "string",
                              "description": "Specify the name of the filter.",
                              "example": "userName",
                              "enum": [
                                "customerGlobalId",
                                "accountName",
                                "customerName",
                                "lastUpdatedTime",
                                "userName",
                                "userEmail",
                                "profile",
                                "userStatus",
                                "endpointsLicense",
                                "endpointsUsageMB",
                                "isDeleted",
                                "createdOn",
                                "managedBy",
                                "customAttributeValue",
                                "customAttributeName"
                              ]
                            },
                            "operator": {
                              "type": "string",
                              "description": "The operators that are supported for the filter are - EQUAL, NOTEQUAL, CONTAINS, LT (less-than), LTEQ (less-than-or-equal), GT (greater-than), GTEQ (greater-than-or-equal).",
                              "example": "EQUAL",
                              "enum": [
                                "EQUAL",
                                "GT",
                                "GTE",
                                "LT",
                                "LTE",
                                "CONTAINS",
                                "NOTEQUAL"
                              ]
                            },
                            "value": {
                              "oneOf": [
                                { "type": "string", "description": "string" },
                                { "type": "integer", "description": "integer" },
                                {
                                  "type": "array",
                                  "description": "array of strings",
                                  "items": { "type": "string" }
                                },
                                {
                                  "type": "array",
                                  "description": "array of integers",
                                  "items": { "type": "integer" }
                                }
                              ],
                              "description": "Specify the value of the filter applied to the report.",
                              "example": "user1"
                            }
                          }
                        }
                      }
                    }
                  },
                  "pageToken": {
                    "type": "string",
                    "description": "Specify the token to access the results on the next page. Keep this field blank for the first request. To view the results on the next page, use the value received in the 'nextPageToken' parameter of the previous response.",
                    "example": ""
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserProvisioningReportDataResponse"
                }
              }
            }
          },
          "400": { "description": "Bad Request", "content": {} },
          "404": {
            "description": "The requested resource was not found.",
            "content": {}
          },
          "500": {
            "description": "The request was not processed due to an internal error.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIError" }
              }
            }
          }
        }
      }
    },
    "/msp/reporting/v1/reports/mspEPUserRollout": {
      "post": {
        "tags": ["Endpoints Reports"],
        "summary": "View User Rollout Report",
        "description": "This report provides user devices, their activation date, and the status of first backup of MSP customers. This API may be updated without any prior notification. Check the API documentation for the latest updates regularly.",
        "operationId": "GetUserRolloutReportDataRequest",
        "parameters": [
          {
            "name": "Authorization",
            "description": "Specify the Bearer access token",
            "schema": { "type": "string" },
            "in": "header",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "filters": {
                    "type": "object",
                    "properties": {
                      "pageSize": {
                        "type": "integer",
                        "description": "Specify the maximum number of records that should returned in a response. Maximum limit is 500 records. Default pageSize is 100.",
                        "default": 100
                      },
                      "filterBy": {
                        "type": "array",
                        "description": "Select the filters to be applied to the report. If you do not specify a date filter, the lastUpdatedTime filter is set to 1 day by default.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "fieldName": {
                              "type": "string",
                              "description": "Specify the name of the filter.",
                              "example": "profileName",
                              "enum": [
                                "customerGlobalId",
                                "accountName",
                                "customerName",
                                "lastUpdatedTime",
                                "userName",
                                "userEmail",
                                "customAttributeValue",
                                "customAttributeName",
                                "addedOn",
                                "profileName",
                                "licenseData",
                                "source",
                                "activatedOn",
                                "systemSettings",
                                "lastBackupStatus",
                                "lastBackupTime",
                                "firstBackupStatus",
                                "isDeleted",
                                "firstBackupSizeMB",
                                "bytesTransferredMB",
                                "timeTakenHhMm",
                                "clientVersion",
                                "osPlatform",
                                "lastUpgradedOn",
                                "upgradeState",
                                "deviceOS"
                              ]
                            },
                            "operator": {
                              "type": "string",
                              "description": "The operators that are supported for the filter are - EQUAL, NOTEQUAL, CONTAINS, LT (less-than), LTEQ (less-than-or-equal), GT (greater-than), GTEQ (greater-than-or-equal).",
                              "example": "EQUAL",
                              "enum": [
                                "EQUAL",
                                "GT",
                                "GTE",
                                "LT",
                                "LTE",
                                "CONTAINS",
                                "NOTEQUAL"
                              ]
                            },
                            "value": {
                              "oneOf": [
                                { "type": "string", "description": "string" },
                                { "type": "integer", "description": "integer" },
                                {
                                  "type": "array",
                                  "description": "array of strings",
                                  "items": { "type": "string" }
                                },
                                {
                                  "type": "array",
                                  "description": "array of integers",
                                  "items": { "type": "integer" }
                                }
                              ],
                              "description": "Specify the value of the filter applied to the report.",
                              "example": "profileC"
                            }
                          }
                        }
                      }
                    }
                  },
                  "pageToken": {
                    "type": "string",
                    "description": "Specify the token to access the results on the next page. Keep this field blank for the first request. To view the results on the next page, use the value received in the 'nextPageToken' parameter of the previous response.",
                    "example": ""
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserRolloutReportDataResponse"
                }
              }
            }
          },
          "400": { "description": "Bad Request", "content": {} },
          "404": {
            "description": "The requested resource was not found.",
            "content": {}
          },
          "500": {
            "description": "The request was not processed due to an internal error.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIError" }
              }
            }
          }
        }
      }
    },
    "/msp/reporting/v1/reports/mspEPLastBackupStatus": {
      "post": {
        "tags": ["Endpoints Reports"],
        "summary": "View Last Backup Status Report data",
        "description": "The Last Backup Status report provides details of the last backup of MSP customers. This API may be updated without any prior notification. Check the API documentation for the latest updates regularly.",
        "operationId": "GetLastBackupStatusReportDataRequest",
        "parameters": [
          {
            "name": "Authorization",
            "description": "Specify the Bearer access token",
            "schema": { "type": "string" },
            "in": "header",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "filters": {
                    "type": "object",
                    "properties": {
                      "pageSize": {
                        "type": "integer",
                        "description": "Specify the maximum number of records that should returned in a response. Maximum limit is 500 records. Default pageSize is 100.",
                        "default": 100
                      },
                      "filterBy": {
                        "type": "array",
                        "description": "Select the filters to be applied to the report. If you do not specify a date filter, the lastUpdatedTime filter is set to 1 day by default.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "fieldName": {
                              "type": "string",
                              "description": "Specify the name of the filter.",
                              "example": "status",
                              "enum": [
                                "lastUpdatedTime",
                                "customerGlobalId",
                                "accountName",
                                "customerName",
                                "userName",
                                "userEmailID",
                                "device",
                                "profile",
                                "clientVersion",
                                "osPlatform",
                                "deviceStatus",
                                "startTime",
                                "endTime",
                                "filesBackedUp",
                                "filesMissed",
                                "isDeleted",
                                "status",
                                "bytesTransferredMB",
                                "deviceConnectivity",
                                "timeTakenMinutes"
                              ]
                            },
                            "operator": {
                              "type": "string",
                              "description": "The operators that are supported for the filter are - EQUAL, NOTEQUAL, CONTAINS, LT (less-than), LTEQ (less-than-or-equal), GT (greater-than), GTEQ (greater-than-or-equal).",
                              "example": "EQUAL",
                              "enum": [
                                "EQUAL",
                                "GT",
                                "GTE",
                                "LT",
                                "LTE",
                                "CONTAINS",
                                "NOTEQUAL"
                              ]
                            },
                            "value": {
                              "oneOf": [
                                { "type": "string", "description": "string" },
                                { "type": "integer", "description": "integer" },
                                {
                                  "type": "array",
                                  "description": "array of strings",
                                  "items": { "type": "string" }
                                },
                                {
                                  "type": "array",
                                  "description": "array of integers",
                                  "items": { "type": "integer" }
                                }
                              ],
                              "description": "Specify the value of the filter applied to the report.",
                              "example": "Success"
                            }
                          }
                        }
                      }
                    }
                  },
                  "pageToken": {
                    "type": "string",
                    "description": "Specify the token to access the results on the next page. Keep this field blank for the first request. To view the results on the next page, use the value received in the 'nextPageToken' parameter of the previous response.",
                    "example": ""
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLastBackupStatusReportDataResponse"
                }
              }
            }
          },
          "400": { "description": "Bad Request", "content": {} },
          "404": {
            "description": "The requested resource was not found.",
            "content": {}
          },
          "500": {
            "description": "The request was not processed due to an internal error.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIError" }
              }
            }
          }
        }
      }
    },
    "/msp/reporting/v1/reports/mspEPStorageStatistics": {
      "post": {
        "tags": ["Endpoints Reports"],
        "summary": "View storage statistics of MSP customers",
        "description": "This report provides storage details of customers of MSP. This API may be updated without any prior notification. Check the API documentation for the latest updates regularly.",
        "operationId": "GetStorageStatisticsDataRequest",
        "parameters": [
          {
            "name": "Authorization",
            "description": "Specify the Bearer access token",
            "schema": { "type": "string" },
            "in": "header",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "filters": {
                    "type": "object",
                    "properties": {
                      "pageSize": {
                        "type": "integer",
                        "description": "Specify the maximum number of records that should returned in a response. Maximum limit is 500 records. Default pageSize is 100.",
                        "default": 100
                      },
                      "filterBy": {
                        "type": "array",
                        "description": "Select the filters to be applied to the report. If you do not specify a date filter, the lastUpdatedTime filter is set to 1 day by default.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "fieldName": {
                              "type": "string",
                              "description": "Specify the name of the filter.",
                              "example": "storageName",
                              "enum": [
                                "lastUpdatedTime",
                                "customerGlobalId",
                                "accountName",
                                "customerName",
                                "storageName",
                                "totalUsers",
                                "additionalDataUsageMB",
                                "totalUsageMB",
                                "totalSizeOfBackedupFilesMB"
                              ]
                            },
                            "operator": {
                              "type": "string",
                              "description": "The operators that are supported for the filter are - EQUAL, NOTEQUAL, CONTAINS, LT (less-than), LTEQ (less-than-or-equal), GT (greater-than), GTEQ (greater-than-or-equal).",
                              "example": "EQUAL",
                              "enum": [
                                "EQUAL",
                                "GT",
                                "GTE",
                                "LT",
                                "LTE",
                                "CONTAINS",
                                "NOTEQUAL"
                              ]
                            },
                            "value": {
                              "oneOf": [
                                { "type": "string", "description": "string" },
                                { "type": "integer", "description": "integer" },
                                {
                                  "type": "array",
                                  "description": "array of strings",
                                  "items": { "type": "string" }
                                },
                                {
                                  "type": "array",
                                  "description": "array of integers",
                                  "items": { "type": "integer" }
                                }
                              ],
                              "description": "Specify the value of the filter applied to the report.",
                              "example": "druva_us-east-1"
                            }
                          }
                        }
                      }
                    }
                  },
                  "pageToken": {
                    "type": "string",
                    "description": "Specify the token to access the results on the next page. Keep this field blank for the first request. To view the results on the next page, use the value received in the 'nextPageToken' parameter of the previous response.",
                    "example": ""
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStorageStatisticsReportDataResponse"
                }
              }
            }
          },
          "400": { "description": "Bad Request", "content": {} },
          "404": {
            "description": "The requested resource was not found.",
            "content": {}
          },
          "500": {
            "description": "The request was not processed due to an internal error.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIError" }
              }
            }
          }
        }
      }
    },
    "/msp/reporting/v1/reports/mspEPStorageAlert": {
      "post": {
        "tags": ["Endpoints Reports"],
        "summary": "View storage alerts of MSP customers",
        "description": "This report provides storage alert details of customers of MSP. This API may be updated without any prior notification. Check the API documentation for the latest updates regularly.",
        "operationId": "GetStorageAlertsDataRequest",
        "parameters": [
          {
            "name": "Authorization",
            "description": "Specify the Bearer access token",
            "schema": { "type": "string" },
            "in": "header",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "filters": {
                    "type": "object",
                    "properties": {
                      "pageSize": {
                        "type": "integer",
                        "description": "Specify the maximum number of records that should returned in a response. Maximum limit is 500 records. Default pageSize is 100.",
                        "default": 100
                      },
                      "filterBy": {
                        "type": "array",
                        "description": "Select the filters to be applied to the report. If you do not specify a date filter, the lastUpdatedTime filter is set to 1 day by default.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "fieldName": {
                              "type": "string",
                              "description": "Specify the name of the filter.",
                              "example": "entity",
                              "enum": [
                                "lastUpdatedTime",
                                "customerGlobalId",
                                "accountName",
                                "customerName",
                                "entity",
                                "alertDetails",
                                "firstOccurrence",
                                "latestOccurrence",
                                "active"
                              ]
                            },
                            "operator": {
                              "type": "string",
                              "description": "The operators that are supported for the filter are - EQUAL, NOTEQUAL, CONTAINS, LT (less-than), LTEQ (less-than-or-equal), GT (greater-than), GTEQ (greater-than-or-equal).",
                              "example": "EQUAL",
                              "enum": [
                                "EQUAL",
                                "GT",
                                "GTE",
                                "LT",
                                "LTE",
                                "CONTAINS",
                                "NOTEQUAL"
                              ]
                            },
                            "value": {
                              "oneOf": [
                                { "type": "string", "description": "string" },
                                { "type": "integer", "description": "integer" },
                                {
                                  "type": "array",
                                  "description": "array of strings",
                                  "items": { "type": "string" }
                                },
                                {
                                  "type": "array",
                                  "description": "array of integers",
                                  "items": { "type": "integer" }
                                }
                              ],
                              "description": "Specify the value of the filter applied to the report.",
                              "example": "Administrator"
                            }
                          }
                        }
                      }
                    }
                  },
                  "pageToken": {
                    "type": "string",
                    "description": "Specify the token to access the results on the next page. Keep this field blank for the first request. To view the results on the next page, use the value received in the 'nextPageToken' parameter of the previous response.",
                    "example": ""
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStorageAlertReportDataResponse"
                }
              }
            }
          },
          "400": { "description": "Bad Request", "content": {} },
          "404": {
            "description": "The requested resource was not found.",
            "content": {}
          },
          "500": {
            "description": "The request was not processed due to an internal error.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIError" }
              }
            }
          }
        }
      }
    },
    "/msp/reporting/v1/reports/mspEPCloudCacheStatistics": {
      "post": {
        "tags": ["Endpoints Reports"],
        "summary": "View cloud cache statistics of MSP customers",
        "description": "This report provides cloud cache statistics details of customers of MSP. This API may be updated without any prior notification. Check the API documentation for the latest updates regularly.",
        "operationId": "GetCloudCacheDataRequest",
        "parameters": [
          {
            "name": "Authorization",
            "description": "Specify the Bearer access token",
            "schema": { "type": "string" },
            "in": "header",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "filters": {
                    "type": "object",
                    "properties": {
                      "pageSize": {
                        "type": "integer",
                        "description": "Specify the maximum number of records that should returned in a response. Maximum limit is 500 records. Default pageSize is 100.",
                        "default": 100
                      },
                      "filterBy": {
                        "type": "array",
                        "description": "Select the filters to be applied to the report. If you do not specify a date filter, the lastUpdatedTime filter is set to 1 day by default.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "fieldName": {
                              "type": "string",
                              "description": "Specify the name of the filter.",
                              "example": "cloudCacheName",
                              "enum": [
                                "lastUpdatedTime",
                                "customerGlobalId",
                                "accountName",
                                "customerName",
                                "cloudCacheName",
                                "totalUsers",
                                "usersForRestore",
                                "totalCacheSizeMB",
                                "cacheUsageMB"
                              ]
                            },
                            "operator": {
                              "type": "string",
                              "description": "The operators that are supported for the filter are - EQUAL, NOTEQUAL, CONTAINS, LT (less-than), LTEQ (less-than-or-equal), GT (greater-than), GTEQ (greater-than-or-equal).",
                              "example": "EQUAL",
                              "enum": [
                                "EQUAL",
                                "GT",
                                "GTE",
                                "LT",
                                "LTE",
                                "CONTAINS",
                                "NOTEQUAL"
                              ]
                            },
                            "value": {
                              "oneOf": [
                                { "type": "string", "description": "string" },
                                { "type": "integer", "description": "integer" },
                                {
                                  "type": "array",
                                  "description": "array of strings",
                                  "items": { "type": "string" }
                                },
                                {
                                  "type": "array",
                                  "description": "array of integers",
                                  "items": { "type": "integer" }
                                }
                              ],
                              "description": "Specify the value of the filter applied to the report.",
                              "example": "cache--cloud"
                            }
                          }
                        }
                      }
                    }
                  },
                  "pageToken": {
                    "type": "string",
                    "description": "Specify the token to access the results on the next page. Keep this field blank for the first request. To view the results on the next page, use the value received in the 'nextPageToken' parameter of the previous response.",
                    "example": ""
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCloudCacheReportDataResponse"
                }
              }
            }
          },
          "400": { "description": "Bad Request", "content": {} },
          "404": {
            "description": "The requested resource was not found.",
            "content": {}
          },
          "500": {
            "description": "The request was not processed due to an internal error.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIError" }
              }
            }
          }
        }
      }
    },
    "/msp/reporting/v1/reports/mspDGRollbackActions": {
      "post": {
        "tags": ["Cyber Resilience Reports"],
        "summary": "View Rollback Actions Report",
        "description": "This report provides a consolidated and point-in-time views based on date ranges for all the protected entities that are deleted in your environment. This API may be updated without any prior notification. Check the API documentation for the latest updates regularly.",
        "operationId": "GetRollbackActionsReportDataRequest",
        "parameters": [
          {
            "name": "Authorization",
            "description": "Specify the Bearer access token",
            "schema": { "type": "string" },
            "in": "header",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "filters": {
                    "type": "object",
                    "properties": {
                      "pageSize": {
                        "type": "integer",
                        "description": "Specify the maximum number of records that should returned in a response. Maximum limit is 500 records. Default pageSize is 100.",
                        "default": 100
                      },
                      "filterBy": {
                        "type": "array",
                        "description": "Select the filters to be applied to the report. If you do not specify a date filter, the lastUpdatedTime filter is set to 1 day by default.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "fieldName": {
                              "type": "string",
                              "description": "Specify the name of the filter.",
                              "example": "deleteRequestID",
                              "enum": [
                                "customerGlobalId",
                                "accountName",
                                "customerName",
                                "deleteRequestID",
                                "deletedDateTime",
                                "permanentDeleteDate",
                                "deletedBy",
                                "entityType",
                                "deletedItem",
                                "entityName",
                                "deletionReason",
                                "status",
                                "lastUpdatedTime",
                                "dataSize",
                                "rollbackDateTime",
                                "rolledBackBy"
                              ]
                            },
                            "operator": {
                              "type": "string",
                              "description": "The operators that are supported for the filter are - EQUAL, NOTEQUAL, CONTAINS, LT (less-than), LTEQ (less-than-or-equal), GT (greater-than), GTEQ (greater-than-or-equal).",
                              "example": "EQUAL",
                              "enum": [
                                "EQUAL",
                                "GT",
                                "GTE",
                                "LT",
                                "LTE",
                                "CONTAINS",
                                "NOTEQUAL"
                              ]
                            },
                            "value": {
                              "oneOf": [
                                { "type": "string", "description": "string" },
                                { "type": "integer", "description": "integer" },
                                {
                                  "type": "array",
                                  "description": "array of strings",
                                  "items": { "type": "string" }
                                },
                                {
                                  "type": "array",
                                  "description": "array of integers",
                                  "items": { "type": "integer" }
                                }
                              ],
                              "description": "Specify the value of the filter applied to the report.",
                              "example": "11ef158d-929c-4841-ab83-0ca4179c1420"
                            }
                          }
                        }
                      }
                    }
                  },
                  "pageToken": {
                    "type": "string",
                    "description": "Specify the token to access the results on the next page. Keep this field blank for the first request. To view the results on the next page, use the value received in the 'nextPageToken' parameter of the previous response.",
                    "example": ""
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRollbackActionsReportDataResponse"
                }
              }
            }
          },
          "400": { "description": "Bad Request", "content": {} },
          "404": {
            "description": "The requested resource was not found.",
            "content": {}
          },
          "500": {
            "description": "The request was not processed due to an internal error.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIError" }
              }
            }
          }
        }
      }
    },
    "/msp/reporting/v1/reports/mspDGDataProtectionRisk": {
      "post": {
        "tags": ["Cyber Resilience Reports"],
        "summary": "View Data Protection Risk Report",
        "description": "This report provides a consolidated view of the connection status of the Enterprise workload agents with the Cloud. This API may be updated without any prior notification. Check the API documentation for the latest updates regularly.",
        "operationId": "GetDataProtectionRiskReportDataRequest",
        "parameters": [
          {
            "name": "Authorization",
            "description": "Specify the Bearer access token",
            "schema": { "type": "string" },
            "in": "header",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "filters": {
                    "type": "object",
                    "properties": {
                      "pageSize": {
                        "type": "integer",
                        "description": "Specify the maximum number of records that should returned in a response. Maximum limit is 500 records. Default pageSize is 100.",
                        "default": 100
                      },
                      "filterBy": {
                        "type": "array",
                        "description": "Select the filters to be applied to the report.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "fieldName": {
                              "type": "string",
                              "description": "Specify the name of the filter.",
                              "example": "workloadName",
                              "enum": [
                                "customerGlobalId",
                                "accountName",
                                "customerName",
                                "organization",
                                "workloadName",
                                "workloadAgent",
                                "connectionStatusToCloud",
                                "disconnectedFromCloudSince",
                                "lastUpdatedTime",
                                "vCenterESXiHosts",
                                "connectionStatusToVCenter"
                              ]
                            },
                            "operator": {
                              "type": "string",
                              "description": "The operators that are supported for the filter are - EQUAL, NOTEQUAL, CONTAINS, LT (less-than), LTEQ (less-than-or-equal), GT (greater-than), GTEQ (greater-than-or-equal).",
                              "example": "EQUAL",
                              "enum": [
                                "EQUAL",
                                "GT",
                                "GTE",
                                "LT",
                                "LTE",
                                "CONTAINS",
                                "NOTEQUAL"
                              ]
                            },
                            "value": {
                              "oneOf": [
                                { "type": "string", "description": "string" },
                                { "type": "integer", "description": "integer" },
                                {
                                  "type": "array",
                                  "description": "array of strings",
                                  "items": { "type": "string" }
                                },
                                {
                                  "type": "array",
                                  "description": "array of integers",
                                  "items": { "type": "integer" }
                                }
                              ],
                              "description": "Specify the value of the filter applied to the report..",
                              "example": "Files"
                            }
                          }
                        }
                      }
                    }
                  },
                  "pageToken": {
                    "type": "string",
                    "description": "Specify the token to access the results on the next page. Keep this field blank for the first request. To view the results on the next page, use the value received in the 'nextPageToken' parameter of the previous response.",
                    "example": ""
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDataProtectionRiskReportDataResponse"
                }
              }
            }
          },
          "400": { "description": "Bad Request", "content": {} },
          "404": {
            "description": "The requested resource was not found.",
            "content": {}
          },
          "500": {
            "description": "The request was not processed due to an internal error.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIError" }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "APIError": {
        "description": "APIError defines an application error result format",
        "type": "object",
        "properties": {
          "code": { "type": "string" },
          "message": { "type": "string" }
        }
      },
      "AdminResponse": {
        "description": "Contains details about a MSP admin.",
        "type": "object",
        "properties": {
          "email": {
            "description": "The email of the admin. Example - email@example.com",
            "type": "string",
            "example": "email@example.com"
          },
          "firstName": {
            "description": "The first name of the admin. Example - John",
            "type": "string",
            "example": "John"
          },
          "id": {
            "format": "int64",
            "description": "The unique ID of the admin. Example - 1",
            "type": "integer",
            "example": 1
          },
          "lastName": {
            "description": "The last name of the admin. Example - 'Smith'",
            "type": "string",
            "example": "Smith"
          },
          "phone": {
            "description": "The phone number of the admin. Example - '12345678910'",
            "type": "string",
            "example": "12345678910"
          },
          "role": {
            "description": "The role ID of the admin.\n  - 2 - MSP Admin\n  - 3 - Tenant Admin\n  - 4 - Read Only Admin\n",
            "type": "integer",
            "example": 2
          }
        }
      },
      "GetTenantsResponse": {
        "type": "object",
        "properties": {
          "tenants": {
            "description": "The list of tenants and their information.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/GetTenantResponse" }
          },
          "nextPageToken": {
            "description": "The token to access the next page of results. This is empty if there are no more results. Example - 'eyJwYWdlU2l6ZSI6IDEwMH0='",
            "type": "string",
            "example": "eyJwYWdlU2l6ZSI6IDEwMH0="
          }
        }
      },
      "GetTenantResponse": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique ID of the tenant. Example - 'e293b4c7-a984-4813-8fba-526d5b0edc80'",
            "type": "string",
            "example": "e293b4c7-a984-4813-8fba-526d5b0edc80"
          },
          "customerID": {
            "description": "The unique ID of the MSP customer. Example - '8ccbc1c-0ca0-4077-ad94-a74479c299b8'",
            "type": "string",
            "example": "78ccbc1c-0ca0-4077-ad94-a74479c299b8"
          },
          "productID": {
            "format": "int64",
            "description": "The ID of the product tenant.\n- For Hybrid Workloads, it is '1'. \n- For SaaS Apps and Endpoints, it is '2'.\n",
            "type": "integer",
            "example": 1
          },
          "licenseExpiryDate": {
            "format": "date-time",
            "description": "The date on which the license of tenant will expire. Example - '2022-10-25T00:00:00Z'",
            "type": "string",
            "example": "2022-10-25T00:00:00Z"
          },
          "quota": {
            "format": "double",
            "description": "The quota limit for the tenant. It is a soft limit affecting only quota alerts and reporting. Example - 1.5",
            "type": "number",
            "example": 1.5
          },
          "quotaEndDate": {
            "format": "date-time",
            "description": "The quota end date for the tenant. Example - '2022-10-25T00:00:00Z'",
            "type": "string",
            "example": "2022-10-25T00:00:00Z"
          },
          "quotaStartDate": {
            "format": "date-time",
            "description": "The quota start date for the tenant. Example - '2022-10-25T00:00:00Z'",
            "type": "string",
            "example": "2022-10-25T00:00:00Z"
          },
          "servicePlanID": {
            "format": "int64",
            "description": "The unique ID of the service plan associated with the tenant. Example - 1",
            "type": "integer",
            "example": 1
          },
          "storageRegions": {
            "description": "AWS storage regions where the data is stored for the tenant. Example - 'us-east-1', 'us-east-2'",
            "type": "array",
            "items": { "type": "string" },
            "example": ["us-east-1", "us-east-2"]
          },
          "features": {
            "description": "The list of features enabled for the tenant.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/TenantFeatures" }
          },
          "tenantType": { "$ref": "#/components/schemas/TenantType" },
          "status": {
            "format": "int64",
            "description": "- The current status of the tenant.\n    - 0  Creation Pending - Creation is pending of the tenant.\n    - 1 Ready - The tenant is created and associated with the customer.\n    - 2 Suspended - The tenant is suspended.\n    - 3 Soft deleted - The deletion of the tenant is initiated.\n    - 4 Being migrated - Migration of the tenant is in progress.\n    - 5 Updating - Tenant updation in under progress.\n",
            "type": "integer",
            "example": 1
          },
          "createdOn": {
            "format": "date-time",
            "description": "The date and time on which the tenant was created. Example -  '2022-10-25T00:00:00Z'",
            "type": "string",
            "example": "2022-10-25T00:00:00Z"
          },
          "activeSince": {
            "format": "date-time",
            "description": "The date and time since the tenant is active for the customer. Example -  '2022-10-25T00:00:00Z'",
            "type": "string",
            "example": "2022-10-25T00:00:00Z"
          },
          "deleteDate": {
            "format": "date-time",
            "description": "The date and time on which the tenant assigned to the customer will be deleted. If the tenant is not marked for deletion, no value is displayed. Example - '2022-10-25T00:00:00Z'",
            "type": "string",
            "example": "2022-10-25T00:00:00Z"
          }
        }
      },
      "CreateTenantRequest": {
        "description": "- Specify the details for a new tenant. \n",
        "required": [
          "licenseExpiryDate",
          "servicePlanID",
          "storageRegions",
          "tenantType",
          "productID",
          "features"
        ],
        "type": "object",
        "properties": {
          "licenseExpiryDate": {
            "format": "date-time",
            "description": "Specify the date on which the tenant will expire. The format for this parameter value is YYYY-MM-DDTHH:MM:SSZ. Example - '2022-10-25T00:00:00Z'",
            "type": "string",
            "example": "2022-10-25T00:00:00Z"
          },
          "quota": {
            "format": "double",
            "description": "Specify the Druva Consumption Units to be allocated to this customer. If the customer is close to breaching this limit, an alert is sent to the configured email address based on the severity of the breach. Example - 1.5",
            "type": "number",
            "example": 1.5
          },
          "quotaStartDate": {
            "format": "date-time",
            "description": "Specify the Start date from when the quota limit will be applicable to the customer account and the storage consumption usage begins. The format for this parameter value is YYYY-MM-DDTHH:MM:SSZ. Example - '2022-10-25T00:00:00Z'",
            "type": "string",
            "example": "2022-10-25T00:00:00Z"
          },
          "quotaEndDate": {
            "format": "date-time",
            "description": "Specify the End date on which the quota limit will end for the customer account. The format for this parameter value is YYYY-MM-DDTHH:MM:SSZ. Example - '2022-10-25T00:00:00Z'",
            "type": "string",
            "example": "2022-10-25T00:00:00Z"
          },
          "servicePlanID": {
            "format": "int64",
            "description": "- Specify the unique ID of the Service Plan that you wish to associate with the tenant. \n- Get the Service Plan ID using the 'List Service Plans' API.\n",
            "type": "integer",
            "example": 1
          },
          "storageRegions": {
            "description": "- Specify the AWS storage regions where you want to store the tenant data.\n- Get the list of AWS storage regions configured for your account in the MSC portal. Example - 'us-east-1'\n",
            "type": "array",
            "items": { "type": "string" },
            "example": ["us-east-1", "us-east-2"]
          },
          "tenantType": { "$ref": "#/components/schemas/TenantType" },
          "productID": {
            "format": "int64",
            "description": "Specify the ID of the product for which the tenant is being created.\n - To create the tenant for Hybrid Workloads, specify '1'.\n - To create the tenant for SaaS Apps and Endpoints, specify '2'\n",
            "type": "integer",
            "example": 1
          },
          "features": {
            "description": "Specify the list of features that must be enabled for the tenant. It cannot be empty.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/TenantFeatures" }
          }
        }
      },
      "UpdateTenantRequest": {
        "description": "Specify the details for updating existing tenant.",
        "required": [
          "licenseExpiryDate",
          "servicePlanID",
          "storageRegions",
          "tenantType",
          "productID",
          "features"
        ],
        "type": "object",
        "properties": {
          "productID": {
            "format": "int64",
            "description": "> Specify the ID of the product for which the tenant is being created.\n  - To create the tenant for Hybrid Workloads, specify '1'.\n  - To create the tenant for SaaS Apps and Endpoints, specify '2'\n",
            "type": "integer",
            "example": 1
          },
          "licenseExpiryDate": {
            "format": "date-time",
            "description": "Specify the new date on which the license of the tenant will expire. The format for this parameter value is YYYY-MM-DDTHH:MM:SSZ. Example - '2022-10-25T00:00:00Z'",
            "type": "string",
            "example": "2022-10-25T00:00:00Z"
          },
          "quota": {
            "format": "double",
            "description": "Specify the new value of Druva Consumption Units that should be allocated to the customer. If the customer is close to breaching this limit, an alert is sent to the configured email address based on the severity of the breach. Example - 1.5",
            "type": "number",
            "example": 1.5
          },
          "quotaStartDate": {
            "format": "date-time",
            "description": "Specify the new date from when the Quota limit is applicable to the customer and the storage consumption begins. The format for this parameter value is YYYY-MM-DDTHH:MM:SSZ. Example - '2022-10-15T00:00:00Z'",
            "type": "string",
            "example": "2022-10-15T00:00:00Z"
          },
          "quotaEndDate": {
            "format": "date-time",
            "description": "Specify the new date when the allocated Quota limit will expire. After the Quota limit expires, the customer cannot back up the data. The format for this parameter value is YYYY-MM-DDTHH:MM:SSZ. Example - '2022-10-15T00:00:00Z'",
            "type": "string",
            "example": "2022-10-15T00:00:00Z"
          },
          "servicePlanID": {
            "format": "int64",
            "description": "- Specify the unique ID of the Service Plan that you wish to associate with the tenant.\n- Get the Service Plan ID using the 'List Service Plans' API.\n",
            "type": "integer",
            "example": 1
          },
          "tenantType": { "$ref": "#/components/schemas/TenantType" },
          "storageRegions": {
            "description": "- Specify the AWS storage regions where you want to store the tenant data.\n- Get the list of AWS storage regions configured for your account in the MSC portal. Example - 'us-east-1'\n",
            "type": "array",
            "items": { "type": "string" },
            "example": ["us-east-1", "us-east-2"]
          },
          "features": {
            "description": "Specify the updated list of features that need to be enabled for the tenant.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/TenantFeatures" }
          }
        }
      },
      "TenantFeatures": {
        "description": "Features that needs to enabled for tenant.",
        "type": "object",
        "properties": {
          "name": {
            "description": "- Name of the feature. Example - 'M365'\n- For valid products and their values, see - https://developer.druva.com/docs/msp-product-and-attribute-values\n",
            "type": "string",
            "example": "M365"
          },
          "attrs": {
            "description": "- Attributes to be enabled for tenant. \n- Attrs can be empty. Example - []\n- For valid products and their values, see - https://developer.druva.com/docs/msp-product-and-attribute-values\n",
            "type": "array",
            "items": { "$ref": "#/components/schemas/FeatureAttribute" }
          }
        }
      },
      "FeatureAttribute": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Specify the name of the attribute. Example - 'userCount', 'preservedUserCount'",
            "type": "string",
            "example": "userCount"
          },
          "value": {
            "description": "Specify the value of the attribute. Example - 100",
            "type": "integer",
            "example": 100
          }
        }
      },
      "CreateCustomerRequest": {
        "description": "Specify the details for a new customer.",
        "required": ["accountName", "address", "phone", "customerName"],
        "type": "object",
        "properties": {
          "accountName": {
            "description": "Specify the account name for the customer. Account name cannot be changed after creation. Example - 'Druva'",
            "type": "string",
            "example": "Druva"
          },
          "address": {
            "description": "Specify the address for the customer. Example - '213 Derrick Street Boston, MA 02130 USA'",
            "type": "string",
            "example": "213 Derrick Street Boston, MA 02130 USA"
          },
          "customerName": {
            "description": "Specify the organization name for the customer. It should be unique accross all customers of Druva. Example - 'Druva'",
            "type": "string",
            "example": "Druva"
          },
          "phone": {
            "description": "- Specify the phone number for the customer. Example - '12345678910'\n    - Maximum length can be 30.\n    - Country Code can be appended along with '+' sign\n",
            "type": "string",
            "example": "12345678910"
          },
          "tenantAdmins": {
            "description": "Specify the IDs of tenant admins assigned to the customers. You can get tenant admin IDs using 'List admins' API. Example - [1]",
            "type": "array",
            "items": { "format": "int64", "type": "integer" },
            "example": [1, 2, 3]
          },
          "features": {
            "description": "Specify the features supported at Druva MSP customer level.",
            "type": "array",
            "items": { "type": "object" },
            "example": []
          }
        }
      },
      "GetTaskResponse": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique ID of the task. Example - 'c8b54819-486a-497a-b86e-5b93f2422711'",
            "type": "string",
            "example": "c8b54819-486a-497a-b86e-5b93f2422711"
          },
          "name": {
            "description": "The name of the task for which this activity was initiated. Example - 'customerCreate'",
            "type": "string",
            "example": "customerCreate"
          },
          "entityType": {
            "description": "- The entity type of the task. Example - 'MSP'\n- This field contains information to be consumed by MSP services, caller should not interpret, use or depend on its presence in response.\n",
            "type": "string",
            "example": "MSP"
          },
          "entityId": {
            "description": "- The unique entity ID of the task. Example - MSP:25a2d3d0-3e17-40f4-945e-66fff6c6e853\n- This field contains information to be consumed by MSP services, caller should not interpret, use or depend on its presence in response.\n",
            "type": "string",
            "example": "MSP:25a2d3d0-3e17-40f4-945e-66fff6c6e853"
          },
          "status": {
            "format": "int64",
            "description": "- The status of the task.\n    - 1 - Queued \n    - 2 - InProgress \n    - 3 - Paused\n    - 4 - Finished\n",
            "type": "integer",
            "example": 4
          },
          "output": {
            "type": "object",
            "description": "output will only contain successResp or errorResp",
            "properties": {
              "failed": {
                "format": "int64",
                "description": "The status of the output. Example - 0\n- 0 - Success\n- 1 - Failed \n- -1 - Internal use\n",
                "type": "integer",
                "example": 0
              },
              "successResp": {
                "type": "object",
                "properties": {
                  "entityId": {
                    "description": "The unique ID of the entity created using this task. Example - '1e9b6464-69ac-47d8-b97b-7f595d47504c'",
                    "type": "string",
                    "example": "1e9b6464-69ac-47d8-b97b-7f595d47504c"
                  }
                }
              },
              "errorResp": {
                "type": "object",
                "properties": {
                  "code": {
                    "format": "int64",
                    "description": "If an error has occurred and the task has failed, an error code is displayed. Example - 2304",
                    "type": "integer",
                    "example": 2304
                  },
                  "message": {
                    "description": "Error message. Example - 'Customer name already exists'",
                    "type": "string",
                    "example": "Customer name already exists"
                  }
                }
              }
            }
          },
          "createdOn": {
            "format": "date-time",
            "description": "The date and time on which the MSP task was created. Example - '2022-10-15T00:00:00Z'",
            "type": "string",
            "example": "2022-10-25T00:00:00Z"
          },
          "updatedOn": {
            "format": "date-time",
            "description": "The date and time on which the MSP task was last updated. Example - '2022-10-15T00:00:00Z'",
            "type": "string",
            "example": "2022-10-25T00:00:00Z"
          }
        }
      },
      "TaskCreatedResponse": {
        "type": "object",
        "properties": {
          "task": {
            "type": "object",
            "properties": {
              "id": {
                "description": "The task ID of the operation, and can be used to track the progress. Use this task ID in the 'Get Task Details' API to track the operation's progress. Example - 'c8b54819-486a-497a-b86e-5b93f2422711'.",
                "type": "string",
                "example": "c8b54819-486a-497a-b86e-5b93f2422711"
              }
            }
          }
        }
      },
      "GetCustomerResponse": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique ID of the customer. Example - 'bde7f8c2-d063-4a4a-9a8f-c2ea5aff42f3-198'",
            "type": "string",
            "example": "bde7f8c2-d063-4a4a-9a8f-c2ea5aff42f3-198"
          },
          "accountName": {
            "description": "The Account name of the customer. Example - Druva",
            "type": "string",
            "example": "Druva"
          },
          "address": {
            "description": "The postal address of the customer. Example - '213 Derrick Street Boston, MA 02130 USA'.",
            "type": "string",
            "example": "213 Derrick Street Boston, MA 02130 USA"
          },
          "phone": {
            "description": "The contact number of the customer. Example - '12345678910'.",
            "type": "string",
            "example": "12345678910"
          },
          "customerName": {
            "description": "The name of the customer. Example - 'Druva'",
            "type": "string",
            "example": "Druva"
          },
          "features": {
            "description": "The features subscribed by the customer. Example - []",
            "type": "array",
            "items": { "type": "object" },
            "example": []
          },
          "tenantAdmins": {
            "description": "The unique IDs of the tenant admins assigned to the customer. Example - [1]",
            "type": "array",
            "items": { "format": "int64", "type": "integer" },
            "example": [1, 2, 3]
          },
          "status": {
            "format": "int64",
            "description": "The current status of the customer account creation in the MSP Console. Example - 1\n- 0 - Creation pending\n- 1 - Ready\n- 2 - Tenant processing\n",
            "type": "integer",
            "example": 1
          },
          "createdOn": {
            "format": "date-time",
            "description": "The date and time when the customer was created in the MSP Console. Example - '2022-10-25T00:00:00Z'",
            "type": "string",
            "example": "2022-10-25T00:00:00Z"
          },
          "activeSince": {
            "format": "date-time",
            "description": "The date and time since the customer is in Active state in MSP Console. Example - '2022-10-25T00:00:00Z'.",
            "type": "string",
            "example": "2022-10-25T00:00:00Z"
          }
        }
      },
      "GetCustomersResponse": {
        "type": "object",
        "properties": {
          "customers": {
            "description": "The list of returned customers.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/GetCustomerResponse" }
          },
          "nextPageToken": {
            "description": "The token to access the next page of results. This is empty if there are no more results. Example - 'eyJwYWdlU2l6ZSI6IDEwMH0='",
            "type": "string",
            "example": "eyJwYWdlU2l6ZSI6IDEwMH0="
          }
        }
      },
      "ListAdminsResponse": {
        "type": "object",
        "properties": {
          "admins": {
            "description": "The list of admins.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AdminResponse" }
          },
          "filters": { "$ref": "#/components/schemas/multiselectFilterAdmins" },
          "pageNumber": {
            "format": "int64",
            "description": "The current page number of results list. Example - 1",
            "type": "integer",
            "example": 1
          },
          "pageSize": {
            "format": "int64",
            "description": "The number of results that can fit on one page of results. Example - 25",
            "type": "integer",
            "example": 25
          },
          "search": {
            "description": "The search field specified in the request. Example - 'John'",
            "type": "string",
            "example": "John"
          },
          "size": {
            "format": "int64",
            "description": "The size of returned results list. Example - 25",
            "type": "integer",
            "example": 25
          },
          "sortBy": {
            "description": "The sort by field specified in the request. Example - 'id'",
            "type": "string",
            "example": "id"
          },
          "sortOrder": { "$ref": "#/components/schemas/SortOrder" },
          "totalSize": {
            "format": "int64",
            "description": "The total size of results available. Example - 50",
            "type": "integer",
            "example": 50
          }
        }
      },
      "ListServicePlansResponse": {
        "type": "object",
        "properties": {
          "servicePlans": {
            "description": "The list of service plans.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/ServicePlan" }
          },
          "nextPageToken": {
            "description": "The token to access the next page of results. This is empty if there are no more results. Example - 'eyJwYWdlU2l6ZSI6IDEwMH0='",
            "type": "string",
            "example": "eyJwYWdlU2l6ZSI6IDEwMH0="
          }
        }
      },
      "ServicePlanProductDetailsResponse": {
        "description": "Contains service plan details for a specific product.",
        "type": "object",
        "properties": {
          "edition": {
            "description": "The name of the edition assigned to the service plan. The edition can have one of the following values - \n - 1: business \n - 2: enterprise \n - 3: elite\n",
            "type": "string",
            "example": "elite"
          },
          "productID": {
            "format": "int64",
            "description": "The ID of the product for which this service plan is configured. Example - 1",
            "type": "integer",
            "example": 1
          },
          "features": {
            "description": "The list containing service plan features for specific products. Example - []",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServicePlanProductFeatures"
            }
          }
        }
      },
      "ServicePlanProductFeatures": {
        "required": ["name", "isEnabled"],
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the feature as per Service Plan. The feature names can have the following values - \n- 1: Hybrid Workloads\n- 2: M365\n- 3: Endpoints\n- 4: storage\n- 5: sensitiveDataGovernance\n",
            "type": "string"
          },
          "isEnabled": { "type": "boolean" },
          "attrs": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ServicePlanAttrs" }
          }
        }
      },
      "ServicePlanAttrs": {
        "required": ["name", "value"],
        "type": "object",
        "properties": {
          "name": {
            "description": "- Name of the attribute as per Service Plan Feature\n- The feature Hybrid Workloads, M365 and Endpoints can have following attrs name \n> 1: backupFrequencyLimitMin\n> 2: backupFrequencyLimitMax\n> 3: backupFrequencyLimitUnit\n> 4: retentionLimitMin\n> 5: retentionLimitMax\n> 6: retentionLimitUnit\n> 7: workloads\n  \n",
            "type": "string"
          },
          "value": {
            "description": "- Type of value will vary for different attributes. \n- For valid products and their values, see -  https://developer.druva.com/docs/msp-product-and-attribute-values\n",
            "type": "object"
          }
        }
      },
      "ServicePlan": {
        "type": "object",
        "properties": {
          "id": {
            "format": "int64",
            "description": "The ID of the service plan. Example - 1",
            "type": "integer",
            "example": 1
          },
          "name": {
            "description": "The name of the service plan. Example - 'Default service plan'",
            "type": "string",
            "example": "Default service plan"
          },
          "status": {
            "format": "int64",
            "description": "- The status of the Service Plan.\n    - 0 - Updating\n    - 1 - Ready \n",
            "type": "integer",
            "example": 1
          },
          "products": {
            "description": "The list containing service plan details for specific products. Example - []",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServicePlanProductDetailsResponse"
            }
          }
        }
      },
      "SortOrder": {
        "description": "The sort order field specified in the request.",
        "type": "string",
        "example": "ASC"
      },
      "TenantType": {
        "format": "int64",
        "description": "Specify the tenant type for the product.\n - Specify '1' if it is a Sandbox.\n - Specify '2' if it is Evaluation. This is a trial plan with a validity of 30 days. If you select this tenant type, the product license will be active until 30 days. After 30 days, you must change the tenant type to Commercial.\n - Specify '3' if it is Commercial. For this tenant type, a Hybrid Workloads license is valid for eight years, while a SaaS Apps and Endpoints license is valid for three years.\n",
        "type": "integer",
        "example": 2
      },
      "UpdateCustomerRequest": {
        "required": ["address", "phone", "customerName"],
        "type": "object",
        "properties": {
          "address": {
            "description": "Specify the address for the customer.",
            "type": "string",
            "example": "213 Derrick Street Boston, MA 02130 USA"
          },
          "phone": {
            "description": "- Specify the phone number for the customer.\n    - Maximum length can be 30.\n    - Country Code can be appended along with '+' sign\n",
            "type": "string",
            "example": "12345678910"
          },
          "customerName": {
            "description": "Specify the customer name for the customer.",
            "type": "string",
            "example": "Druva"
          },
          "accountName": {
            "description": "- Specify the account name for the customer. Account name cannot be changed in updation. Example - 'Druva'. \n- If account name is different than existing, it will return error.\n - If account name is empty then it will return success",
            "type": "string",
            "example": "Druva"
          },
          "tenantAdmins": {
            "description": "- Specify the unique IDs of tenant administrators who should manage the tenant for the customer. Get the list of tenant administrators IDs using the 'List all administrators' API.\n- If you want to remove a tenant administrator from this customer, simply do not specify the unique ID of the administrator.\n- If tenant admin list is empty then all tenant admins will be removed",
            "type": "array",
            "items": { "format": "int64", "type": "integer" },
            "example": [1, 2, 3]
          },
          "features": {
            "description": "Specify the features supported at Druva MSP customer level.",
            "type": "array",
            "items": { "type": "object" },
            "example": []
          }
        }
      },
      "multiselectFilterAdmins": {
        "description": "The filters specified in the request.",
        "type": "object",
        "properties": {
          "adminIDs": {
            "type": "array",
            "items": { "type": "string" },
            "example": ["1"]
          },
          "emails": {
            "type": "array",
            "items": { "type": "string" },
            "example": ["email@example.com"]
          },
          "roleIDs": {
            "type": "array",
            "items": { "type": "string" },
            "example": ["2"]
          }
        }
      },
      "BackupsetReport": {
        "type": "object",
        "properties": {
          "backupPolicyID": {
            "type": "integer",
            "description": "The ID of the backup set policy associated with the backupset.",
            "example": 1
          },
          "backupPolicyName": {
            "type": "string",
            "description": "The name of the backup set policy associated with the backupset.",
            "example": "Example policy"
          },
          "backupsetID": {
            "type": "integer",
            "description": "The ID of the backup set.",
            "format": "int64",
            "example": 1
          },
          "backupsetName": {
            "type": "string",
            "description": "The name of the backup set.",
            "example": "Example backup set"
          },
          "customerID": {
            "type": "string",
            "description": "The ID of the customer associated with the backup set.",
            "example": "bde7f8c2-d063-4a4a-9a8f-c2ea5aff42f3-198"
          },
          "customerName": {
            "type": "string",
            "description": "The name of the customer associated with the backup set.",
            "example": "Example customer"
          },
          "lastSuccessfulBackupCompletionTime": {
            "type": "string",
            "description": "The timestamp of the last successful backub job associated with the backup set. This field has value of null if there is no successful backup jobs for the backup set.",
            "format": "date-time",
            "example": "2022-01-11T10:00:00.000Z"
          },
          "lastSuccessfulBackupJobID": {
            "type": "integer",
            "description": "The ID of the last successful backup job associated with the backup set. This field has value of 0 if there is no successful backup jobs for the backup set.",
            "example": 1
          },
          "lastSuccessfulRestoreCompletionTime": {
            "type": "string",
            "description": "The timestamp of the last successful restore job associated with the backup set. This field has value of null if there is no successful restore jobs for the backup set.",
            "format": "date-time",
            "example": "2022-01-11T10:00:00.000Z"
          },
          "lastSuccessfulRestoreJobID": {
            "type": "integer",
            "description": "The ID of the last successful restore job associated with the backup set. This field has value of 0 if there is no successful restore jobs for the backup set.",
            "example": 1
          },
          "organizationID": {
            "type": "integer",
            "description": "The ID of the organization associated with the backup set.",
            "format": "int64",
            "example": 1
          },
          "organizationName": {
            "type": "string",
            "description": "The name of the organization associated with the backup set.",
            "example": "Example organization"
          },
          "servicePlanID": {
            "type": "integer",
            "description": "The ID of the MSP service plan associated with the backup set.",
            "format": "int64",
            "example": 1
          },
          "servicePlanName": {
            "type": "string",
            "description": "The name of the MSP service plan associated with the backup set.",
            "example": "Example service plan"
          },
          "workloadID": {
            "type": "integer",
            "description": "The ID of the workload associated with the backup set.",
            "format": "int64",
            "example": 1
          },
          "workloadName": {
            "type": "string",
            "description": "The name of the workload associated with the backup set.",
            "example": "File Server"
          }
        }
      },
      "GetGlobalUsageReportSummaryResponse": {
        "type": "object",
        "properties": {
          "endConsumptionUnitsBalance": {
            "type": "number",
            "description": "The consumption unit balance at the date specified in the \"endDate\".",
            "format": "double",
            "example": 1.5
          },
          "endConsumptionUnitsCommit": {
            "type": "number",
            "description": "The consumption unit commit at the date specified in the \"endDate\".",
            "format": "double",
            "example": 2
          },
          "endDate": {
            "type": "string",
            "description": "The last date containing consumption data in the specified time period.",
            "format": "date",
            "example": "2022-01-12T00:00:00.000Z"
          },
          "startConsumptionUnitsBalance": {
            "type": "number",
            "description": "The consumption unit balance at the date specified in the \"startDate\".",
            "format": "double",
            "example": 2
          },
          "startConsumptionUnitsCommit": {
            "type": "number",
            "description": "The consumption unit commit at the date specified in the \"startDate\".",
            "format": "double",
            "example": 2
          },
          "startDate": {
            "type": "string",
            "description": "The first date containing consumption data in the specified time period.",
            "format": "date",
            "example": "2022-01-11T00:00:00.000Z"
          }
        },
        "description": "The response schema containing global usage report summary."
      },
      "GetTenantItemizedReportV2Request": {
        "description": "Specify the details for getting itemized report details.",
        "type": "object",
        "properties": {
          "pageToken": {
            "description": "The token to access the next page of results. Use the token value received in the previous response's parameter 'nextPageToken'.\n- Keep this field blank in the first request.\n",
            "type": "string",
            "example": "eyJwYWdlTnVtYmVyIjoyLCJwYWdlU2l6ZSI6NTAwLCAiZmlsdGVycyI6bnVsbH0="
          },
          "filters": { "$ref": "#/components/schemas/FilterType" }
        }
      },
      "FilterType": {
        "type": "object",
        "properties": {
          "pageSize": {
            "description": "Specify the maximum number of records that should returned in a response. The default page size is 100 records. The maximum limit is 500 records. \n :fa-info-circle: If you specify the pageSize, value from the first API call will be used for the subsequent calls, even if you change the pageSize later on.",
            "type": "integer",
            "maximum": 500,
            "default": 100,
            "example": 10
          },
          "filterBy": {
            "description": "Filters if needs to be applied.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/FilterAttribute" }
          }
        }
      },
      "FilterAttribute": {
        "type": "object",
        "properties": {
          "fieldName": {
            "description": "Specify the name of the filter attribute.",
            "type": "string",
            "enum": [
              "customerGlobalId",
              "accountName",
              "tenantId",
              "productId",
              "productModuleId",
              "date",
              "editionName",
              "servicePlanId",
              "usageDescription"
            ],
            "example": "customerGlobalId"
          },
          "value": {
            "description": "Specify value of column that needs to be filtered. For CONTAINS operator - this can be array of either int or string. For other operators, depending on the datatype of fieldName attribute this can be either int / string / RFC3339 date format. \n This is case sensitive.",
            "example": "b825cee3-5780-45ca-bc1d-83a9ccec5d7b"
          },
          "operator": {
            "description": "Operator for specified filters.\n All string comparisons will be case sensitive. \nSupported filters are: \n - EQUAL: This will return the data with exact match for given field name.\n - NOTEQUAL: This will return the data not matching with given values.\n - CONTAINS: Value for this operator will be an array. This will return data which matches with any value mentioned in array.\n - LT: This is the 'LESS THAN' comparison operator.\n - LTE: This is the 'LESS THAN OR EQUAL TO' comparison operator.\n - GT: This is the 'GREATER THAN' comparison operator.\n - GTE: This is the 'GREATER THAN OR EQUAL TO' comparison operator. \nFor a particular field name an operator can be used once at max. \nFor columns having string data type 'LT', 'LTE', 'GT', 'GTE' operators will work lexicographically.",
            "type": "string",
            "enum": ["EQUAL", "NOTEQUAL", "CONTAINS", "LT", "GT", "LTE", "GTE"],
            "example": "EQUAL"
          }
        }
      },
      "TenantDataItemized": {
        "type": "object",
        "properties": {
          "customerGlobalId": {
            "type": "string",
            "description": "Unique ID of the customer.",
            "example": "bde7f8c2-d063-4a4a-9a8f-c2ea5aff42f3-198"
          },
          "mspGlobalId": {
            "type": "string",
            "description": "Unique ID of the MSP.",
            "example": "MSP:968cf837-0e5e-4645-a510-82b8d4b9e98d"
          },
          "accountName": {
            "type": "string",
            "description": "The name of the customer.",
            "example": "Example customer"
          },
          "tenantId": {
            "type": "string",
            "description": "Unique id of the tenant. This is the 'id' field defined in GET Tenant API.",
            "example": "0001f138-0c37-4980-b3f2-a3342f201ba3"
          },
          "productId": {
            "type": "integer",
            "enum": [1, 2],
            "description": "The ID of the product. 1 - Hybrid Workloads, 2 - SaaS Apps and Endpoints. This field will be updated in the future for addition of new products as and when applicable.\n For valid products and their Product Features, see - https://developer.druva.com/docs/msp-product-and-attribute-values\n",
            "example": 1
          },
          "productName": {
            "type": "string",
            "enum": ["Hybrid Workloads", "SaaS Apps and Endpoints"],
            "description": "The name of the product. This field will be updated in the future for addition of new products as and when applicable.",
            "example": "Hybrid Workloads"
          },
          "productModuleId": {
            "type": "integer",
            "enum": [1, 2, 3, 4],
            "description": "The ID of the product module. This field will be updated in the future for addition of new product modules as and when applicable.\n 1 - Hybrid Workloads, 2 - Microsoft 365, 3 - Endpoints, 4 - Google Workspace",
            "example": 1
          },
          "productModuleName": {
            "type": "string",
            "enum": [
              "Hybrid Workloads",
              "Microsoft 365",
              "Endpoints",
              "Google Workspace"
            ],
            "description": "The name of the product module.\nThis field will be updated in the future for addition of new product modules as and when applicable.",
            "example": "Hybrid Workloads"
          },
          "editionName": {
            "type": "string",
            "enum": ["Business", "Enterprise", "Elite"],
            "description": "The name of the edition.",
            "example": "Business"
          },
          "tenantType": {
            "type": "string",
            "enum": ["Commercial", "Evaluation"],
            "description": "Type of the tenant. Right now stats for only commercial customers are reported.",
            "example": "Commercial"
          },
          "date": {
            "type": "string",
            "description": "Date indicates the date of usage. Date is specified in 'RFC3339' format.",
            "format": "date",
            "example": "2022-01-11T00:00:00.000Z"
          },
          "servicePlanId": {
            "type": "integer",
            "description": "The unique ID of the MSP service plan assigned to the tenant. If updateTenant operation is performed multiple times in a day to change the service plan associated with that tenant, the last updated value of the day will be returned for that day.\nUse Get service plan API to get details about a service plan.",
            "example": 1
          },
          "servicePlanName": {
            "type": "string",
            "description": "The name of the MSP service plan assigned to the tenant for the date indicated by column 'date'. If updateTenant operation is performed multiple times in a day to change the service plan associated with that tenant, the last updated value of the day will be returned for that day.",
            "example": "Example service plan"
          },
          "usageDescription": {
            "type": "string",
            "description": "Usage description indicates the type of consumption e.g. 'Active Users', 'Sensitive Data Governance', 'Accelerated Ransomware Recovery' etc.\n New values may be added for this field when new feature support is added.",
            "example": "Accelerated Ransomware Recovery"
          },
          "usageAmount": {
            "type": "number",
            "format": "double",
            "description": "Usage amount indicates usage for the usage type mentioned in 'usageDescription' field.",
            "example": 1
          },
          "usageUnit": {
            "type": "string",
            "enum": ["Users", "Bytes"],
            "description": "Usage unit defines unit of usage. It will be 'Bytes' for productId 1 and 'Users' for productId 2.",
            "example": "Bytes"
          },
          "cuConsumed": {
            "type": "number",
            "description": "The amount of consumption units consumed by tenant on given day.",
            "format": "double",
            "example": 1.5
          }
        }
      },
      "TenantItemizedReportV2Response": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "The list contains itemized details about consumption units usage.",
            "example": [
              {
                "customerGlobalId": "bde7f8c2-d063-4a4a-9a8f-c2ea5aff42f3-198",
                "accountName": "Example customer",
                "mspGlobalId": "MSP:00864ec2-f925-4552-91bd-89101f9a32c6",
                "tenantId": "0001f138-0c37-4980-b3f2-a3342f201ba4",
                "productId": 2,
                "productName": "SaaS Apps and Endpoints",
                "productModuleId": 3,
                "productModuleName": "Endpoints",
                "editionName": "Elite",
                "tenantType": "Commercial",
                "date": "2023-01-11T00:00:00.000Z",
                "servicePlanId": 2,
                "servicePlanName": "Example service plan",
                "usageDescription": "Sensitive Data Governance",
                "usageAmount": 1,
                "usageUnit": "Users",
                "cuConsumed": 1.5
              },
              {
                "customerGlobalId": "bde7f8c2-d063-4a4a-9a8f-c2ea5aff42f3-198",
                "accountName": "Example customer",
                "mspGlobalId": "MSP:00864ec2-f925-4552-91bd-89101f9a32c6",
                "tenantId": "0001f138-0c37-4980-b3f2-a3342f201ba3",
                "productId": 1,
                "productName": "Hybrid Workloads",
                "productModuleId": 1,
                "productModule": "Hybrid Workloads",
                "editionName": "Elite",
                "tenantType": "Commercial",
                "date": "2023-01-11T00:00:00.000Z",
                "servicePlanName": "Example service plan",
                "usageDescription": "Accelerated Ransomware Recovery",
                "usageAmount": 178,
                "usageUnit": "Bytes",
                "cuConsumed": 94
              }
            ],
            "items": { "$ref": "#/components/schemas/TenantDataItemized" }
          },
          "nextPageToken": {
            "type": "string",
            "description": "The token to access the next page of results. This parameter will be empty for the last page of results.",
            "example": "eyJwYWdlTnVtYmVyIjoyLCJwYWdlU2l6ZSI6NTAwLCAiZmlsdGVycyI6bnVsbH0="
          },
          "filters": {
            "description": "All filters passed in request are returned in response",
            "type": "object",
            "properties": {
              "pageSize": {
                "description": "Maximum number of records that can be returned in the response.",
                "type": "integer",
                "example": 10
              },
              "filterBy": {
                "description": "Filters applied in the request.",
                "type": "array",
                "items": { "$ref": "#/components/schemas/FilterAttribute" }
              }
            }
          },
          "lastSyncTimestamp": {
            "type": "string",
            "description": "Last time sync up timestamp date. Sync up time does not guarantee that consumption stats till this time are included in reported stats. Reported consumption stats may be stale upto 48 hours.",
            "format": "date",
            "example": "2023-01-11T00:00:00.000Z"
          }
        }
      },
      "TenantConsumptionItemized": {
        "type": "object",
        "properties": {
          "additionalOptions": {
            "type": "string",
            "description": "The additional options regarding the Microsoft 365 product (such as Sensitive Data Governance and Unlimited Storage).",
            "example": "N/A"
          },
          "consumptionUnitsConsumed": {
            "type": "number",
            "description": "The amout of consumption units consumed by tenant on given day.",
            "format": "double",
            "example": 0.5
          },
          "customerID": {
            "type": "string",
            "description": "The ID of the customer.",
            "example": "bde7f8c2-d063-4a4a-9a8f-c2ea5aff42f3-198"
          },
          "customerName": {
            "type": "string",
            "description": "The name of the customer.",
            "example": "Example customer"
          },
          "date": {
            "type": "string",
            "description": "The date to which other data refers.",
            "format": "date",
            "example": "2022-01-11T00:00:00.000Z"
          },
          "editionID": {
            "type": "integer",
            "description": "The ID of the edition.",
            "example": 1
          },
          "editionName": {
            "type": "string",
            "description": "The name of the edition.",
            "example": "Business"
          },
          "preservedUserCount": {
            "type": "integer",
            "description": "The preserved user count assigned to the Microsoft 365 product. (Microsoft 365 only - this field is null for Hybrid Workloads tenants.)"
          },
          "productID": {
            "type": "integer",
            "description": "The ID of the product. 1 - Hybrid Workloads, 2 - SaaS Apps and Endpoints",
            "example": 1
          },
          "productName": {
            "type": "string",
            "description": "The name of the product.",
            "example": "Hybrid Workloads"
          },
          "featureName": {
            "type": "string",
            "description": "The name of the feature. Example - 'Hybrid Workloads', 'Microsoft 365', 'Endpoints'",
            "example": "Hybrid Workloads"
          },
          "servicePlanID": {
            "type": "integer",
            "description": "The ID of the MSP service plan assigned to the tenant.",
            "example": 1
          },
          "servicePlanName": {
            "type": "string",
            "description": "The name of the MSP service plan assigned to the tenant.",
            "example": "Example service plan"
          },
          "storageConsumption": {
            "type": "string",
            "description": "The total storage consumed by the tenant at given date.",
            "example": "0.00 GB"
          },
          "tenantTypeID": {
            "type": "integer",
            "description": "The ID of the MSP tenant type.",
            "example": 1
          },
          "tenantTypeName": {
            "type": "string",
            "description": "The name of the MSP tenant type.",
            "example": "Business"
          },
          "userCount": {
            "type": "integer",
            "description": "The user count assigned to the Microsoft 365 product. (Microsoft 365 only - this field is null for Hybrid Workloads tenants.)"
          }
        }
      },
      "TenantConsumptionReport": {
        "type": "object",
        "properties": {
          "consumptionUnitsConsumed": {
            "type": "number",
            "description": "The number of consumption units that have been consumed by the tenant during the specified period.",
            "format": "double",
            "example": 0.5
          },
          "consumptionUnitsConsumedPercentage": {
            "type": "number",
            "description": "The percentage of total consumption units that have been consumed by the tenant during the specified period.",
            "format": "double",
            "example": 100
          },
          "customerID": {
            "type": "string",
            "description": "The ID of the customer.",
            "example": "bde7f8c2-d063-4a4a-9a8f-c2ea5aff42f3-198"
          },
          "customerName": {
            "type": "string",
            "description": "The name of the customer.",
            "example": "Example customer"
          },
          "editionID": {
            "type": "integer",
            "description": "The edition ID of the MSP customer.",
            "example": 1
          },
          "editionName": {
            "type": "string",
            "description": "The edition name of the MSP customer.",
            "example": "Business"
          },
          "productID": {
            "type": "integer",
            "description": "The ID of the product. 1 - Hybrid Workloads, 2 - SaaS Apps and Endpoints",
            "example": 1
          },
          "productName": {
            "type": "string",
            "description": "The name of the product.",
            "example": "Hybrid Workloads"
          },
          "featureName": {
            "type": "string",
            "description": "The name of the feature. Example - 'Hybrid Workloads', 'Microsoft 365', 'Endpoints'",
            "example": "Hybrid Workloads"
          },
          "servicePlanID": {
            "type": "integer",
            "description": "The service plan ID of the MSP customer.",
            "example": 1
          },
          "servicePlanName": {
            "type": "string",
            "description": "The service plan name of the MSP customer.",
            "example": "Example service plan"
          }
        }
      },
      "TenantQuotaReport": {
        "type": "object",
        "properties": {
          "customerID": {
            "type": "string",
            "description": "The ID of the customer.",
            "example": "bde7f8c2-d063-4a4a-9a8f-c2ea5aff42f3-198"
          },
          "customerName": {
            "type": "string",
            "description": "The name of the customer.",
            "example": "Example customer"
          },
          "productID": {
            "type": "integer",
            "description": "The ID of the product. 1 - Hybrid Workloads, 2 - SaaS Apps and Endpoints",
            "example": 1
          },
          "productName": {
            "type": "string",
            "description": "The name of the product.",
            "example": "Hybrid Workloads"
          },
          "featureName": {
            "type": "string",
            "description": "The name of the feature. Example - 'Hybrid Workloads', 'Microsoft 365', 'Endpoints'",
            "example": "Hybrid Workloads"
          },
          "quotaAllocated": {
            "type": "number",
            "description": "The amout of consumption units that have been allocated to the customer.",
            "format": "double",
            "example": 2.5
          },
          "quotaConsumed": {
            "type": "number",
            "description": "The total quota consumped from the quota effective date to the quota end date.",
            "format": "double",
            "example": 0.5
          },
          "quotaConsumedPercentage": {
            "type": "number",
            "description": "The percentage of allocated quota that have been consumed by the tenant from the quotaEffectiveDate to the quotaEndDate.",
            "format": "double",
            "example": 20
          },
          "quotaEffectiveDate": {
            "type": "string",
            "description": "The date from which the quota is counted.",
            "format": "date",
            "example": "2022-01-11T00:00:00.000Z"
          },
          "quotaEndDate": {
            "type": "string",
            "description": "The date up to which the quota is counted.",
            "format": "date",
            "example": "2022-01-11T00:00:00.000Z"
          }
        }
      },
      "GenerateTokenRequest": {
        "type": "object",
        "properties": {
          "grant_type": {
            "type": "string",
            "default": "client_credentials",
            "description": "Provide **client_credentials** as the value in this field."
          }
        }
      },
      "GenerateTokenResponse": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "API access token for specified customer.",
            "example": "MWFkOTdjNzFkMmI2ZTEwZjc1ZTlDMjY2Njp2Y1NZeTN3azdCaVgzUHlZNjNZMzFBPT06MA=="
          },
          "token_type": {
            "type": "string",
            "description": "Type of the token. This will always be a bearer token.",
            "example": "bearer"
          },
          "expires_in": {
            "type": "integer",
            "description": "The token expiry time in seconds.",
            "example": 1800
          }
        }
      },
      "ListCustomerEventsResponse": {
        "type": "object",
        "properties": {
          "events": {
            "type": "array",
            "description": "The list contains event details published by products. Empty array is returned when pageToken is provided in request and there are no events available for the pageToken object.",
            "example": [
              {
                "category": "EVENT",
                "customerName": "sampleCustomerName",
                "details": {
                  "jobID": 46501,
                  "orgID": 8290,
                  "vmName": "WC-OPENDNS",
                  "jobType": "backup",
                  "message": "backup job triggered",
                  "orgName": "Default Organization",
                  "vcenter": "wc-vcenter.edu",
                  "initiator": "System",
                  "hypervisor": "",
                  "resourceID": 1824522,
                  "workloadID": "Vmware",
                  "description": "backup job is triggered for vm WC-OPENDNS and job id is 46501",
                  "productName": "Hybrid Workload",
                  "backupPolicy": "VM Image",
                  "workloadName": "VMware",
                  "jobCreateTime": "2024-07-03T00:00:23Z",
                  "jobTriggerSource": "System",
                  "administrativeGroupID": 17210,
                  "administrativeGroupName": "WCDC"
                },
                "feature": "Job",
                "globalID": "4a89ebfa-e1f5-4305-8a2f-ae4766be77c8",
                "timeStamp": "2022-05-03T23:28:01.631Z",
                "syslogFacility": 1,
                "syslogSeverity": 6,
                "type": "JobTriggered"
              }
            ],
            "items": { "$ref": "#/components/schemas/ListCustomerEvents" }
          },
          "nextPageToken": {
            "description": "The token to access the next page of results. Use the received token value in subsequent request's parameter 'pageToken'.\n",
            "type": "string",
            "example": "eyJwYWdlTnVtYmVyIjoyLCJwYWdlU2l6ZSI6NTAwLCAiZmlsdGVycyI6bnVsbH0="
          }
        }
      },
      "ListCustomerEvents": {
        "description": "The event details published by products of the customer. Contains filtered or unexported fields.",
        "type": "object",
        "properties": {
          "category": {
            "description": "The category of the event.",
            "type": "string",
            "enum": ["EVENT", "AUDIT", "ALERT"]
          },
          "customerName": {
            "description": "Name of the customer for whom the event is generated.",
            "type": "string"
          },
          "details": {
            "description": "All the details of event in JSON schema specific to the eventType. For the JSON schema definition, please refer to <a href=\"https://developer.druva.com/docs/events-api-for-msps#supported-druva-workloads\">Supported Druva Workloads</a>",
            "type": "object"
          },
          "feature": {
            "description": "Type of the entity for which the event has happened.",
            "type": "string"
          },
          "globalID": { "description": "Global ID of MSP.", "type": "string" },
          "timeStamp": {
            "description": "The epoch representation of the time at which the event occurred.",
            "type": "integer"
          },
          "syslogFacility": {
            "description": "Syslog standard of defining the event origin/type.",
            "type": "integer"
          },
          "syslogSeverity": {
            "description": "SyslogSeverity represents the severity(0-7) of the event. The severity codes are as follows:\n\n0: Emergency\n\n1: Alert (action must be taken immediately)\n\n2: Critical (critical conditions)\n\n3: Error (error conditions)\n\n4: Warning (warning conditions)\n\n5: Notice (normal but significant condition)\n\n6: Informational (informational messages)\n\n7: Debug (debug-level messages)",
            "type": "integer"
          },
          "type": {
            "description": "Type of the event. For all valid values of event types, please refer to : <a href=\"https://developer.druva.com/docs/events-api-for-msps#supported-druva-workloads\">Supported Druva Workloads</a>",
            "type": "string"
          }
        }
      },
      "GetAlertHistoryReportDataResponse": {
        "title": "GetAlertHistoryReportDataResponse",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/AlertHistoryReportData" }
          },
          "lastSyncTimestamp": {
            "type": "string",
            "description": "Time stamp of the report data, in UTC format.",
            "format": "date-time"
          },
          "filters": {
            "type": "object",
            "properties": {},
            "description": "The filters applied on the report."
          },
          "nextPageToken": {
            "type": "string",
            "description": "The token to access the next page of results. This parameter will be empty for the last page of the results. This token is valid for 5 minutes.",
            "example": "YTBDNDk6Rjk1MmViY1FpTVpBejNFTU9lSWxzUT09OjA="
          }
        }
      },
      "AlertHistoryReportData": {
        "title": "AlertHistoryReportData",
        "type": "object",
        "properties": {
          "customerGlobalId": {
            "type": "string",
            "description": "Unique ID of the customer.",
            "example": "bde7f8c2-d063-4a4a-9a8f-c2ea5aff42f3-198"
          },
          "accountName": {
            "description": "Account name defined for the customer",
            "type": "string",
            "example": "Druva"
          },
          "customerName": {
            "description": "Customer name defined for the customer ",
            "type": "string",
            "example": "Druva"
          },
          "generated": {
            "type": "string",
            "description": "The date and time, in UTC format, when the alerts were first triggered.",
            "format": "date-time",
            "example": "2023-06-05T08:22:48.968Z"
          },
          "description": {
            "type": "string",
            "description": "The details of the generated alert.",
            "example": "Backup failed"
          },
          "target": {
            "type": "string",
            "description": "The resource for which the alert was triggered.",
            "example": "WIN_R1"
          },
          "resolved": {
            "type": "string",
            "description": "The number of resolved alerts.",
            "example": "3"
          },
          "alertType": {
            "type": "string",
            "description": "The type of alert generated. For example, Jobs.",
            "example": "Jobs"
          },
          "severity": {
            "type": "string",
            "description": "The severity of the alert. For example, Critical, Info, Warning, and so on.",
            "example": "Warning"
          },
          "lastUpdatedTime": {
            "type": "string",
            "description": "The last updated time of a report, in the UTC format.",
            "format": "date-time",
            "example": "2023-06-06T08:22:48.968Z"
          },
          "organization": {
            "type": "string",
            "description": "The name of the organization.",
            "example": "Default Organization"
          }
        }
      },
      "GetBackupActivityReportDataResponse": {
        "title": "GetBackupActivityReportDataResponse",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/BackupActivityReportData" }
          },
          "lastSyncTimestamp": {
            "type": "string",
            "description": "Time stamp of the report data, in UTC format.",
            "format": "date-time"
          },
          "filters": {
            "type": "object",
            "properties": {},
            "description": "The filters applied on the report."
          },
          "nextPageToken": {
            "type": "string",
            "description": "The token to access the next page of results. This parameter will be empty for the last page of the results. This token is valid for 5 minutes.",
            "example": "YTBDNDk6Rjk1MmViY1FpTVpBejNFTU9lSWxzUT09OjA="
          }
        }
      },
      "BackupActivityReportData": {
        "title": "BackupActivityReportData",
        "type": "object",
        "properties": {
          "customerGlobalId": {
            "type": "string",
            "description": "Unique ID of the customer.",
            "example": "bde7f8c2-d063-4a4a-9a8f-c2ea5aff42f3-198"
          },
          "accountName": {
            "description": "Account name defined for the customer",
            "type": "string",
            "example": "Druva"
          },
          "customerName": {
            "description": "Customer name defined for the customer ",
            "type": "string",
            "example": "Druva"
          },
          "lastUpdatedTime": {
            "type": "string",
            "description": "The last updated time of a report, in the UTC format.",
            "format": "date-time",
            "example": "2023-06-04T10:05:18.493Z"
          },
          "ended": {
            "type": "string",
            "description": "The time when the backup operation finished.",
            "format": "date-time",
            "example": "2023-06-04T01:05:18.493Z"
          },
          "started": {
            "type": "string",
            "description": "The time when the backup operation started.",
            "format": "date-time",
            "example": "2023-06-04T03:05:18.493Z"
          },
          "scheduled": {
            "type": "string",
            "description": "The backup schedule defined for the backup set.",
            "format": "date-time",
            "example": "2023-06-05T10:05:18.493Z"
          },
          "jobID": {
            "type": "integer",
            "description": "The unique identification number associated with the backup job.",
            "example": 668
          },
          "workloads": {
            "type": "string",
            "description": "The name of the workload to which the backup set belongs. For example Files, OracleDTC.",
            "example": "Files"
          },
          "status": {
            "type": "string",
            "description": "The status of the backup job.",
            "example": "Successful"
          },
          "backupPolicy": {
            "type": "string",
            "description": "The backup policy associated with the resource.",
            "example": "BackupPolicy1org2"
          },
          "backupType": {
            "type": "string",
            "description": "The backup type for virtual machines and SQL servers.",
            "example": "Full"
          },
          "resourceType": {
            "type": "string",
            "description": "The SQL resource type, such as SQL Standalone Instance or SQL Availability Group.",
            "example": "SQL Standalone Instance"
          },
          "vm": {
            "type": "string",
            "description": "The name of the virtual machine, backup mount name, or NAS device that has been backed up.",
            "example": "NA"
          },
          "backupMethod": {
            "type": "string",
            "description": "The backup method used for Oracle databases, such as Full, Incremental, or Archive Logs.",
            "example": "Incremental"
          },
          "backupContent": {
            "type": "string",
            "description": "The content rule or the custom content applied to the resource for backup. For Oracle and MS-SQL Servers, this field displays the number of databases included in the backup.",
            "example": "Backup Folders: ['E:\\backup\\File31']"
          },
          "scanType": {
            "type": "string",
            "description": "The type of scans, such as the Smart scan or the Full scan.",
            "example": "Full"
          },
          "backupMountName": {
            "type": "string",
            "description": "Name of the backup mount.",
            "example": "NA"
          },
          "backupSet": {
            "type": "string",
            "description": "The name of the backup set associated with the backup policy.",
            "example": "WIN-L8HL4FNA0KB#bset2"
          },
          "administrativeGroup": {
            "type": "string",
            "description": "The name of the administrative group of the workload.",
            "example": "group-1"
          },
          "organization": {
            "type": "string",
            "description": "The name of the organization in which the workload is configured.",
            "example": "org-1"
          },
          "details": {
            "type": "string",
            "description": "The details of the job.",
            "example": "Backup completed successfully"
          },
          "deviceName": {
            "type": "string",
            "description": "The device name in Phoenix. Example - Ernie Carter's Macbook",
            "example": "NA"
          },
          "configurationMode": {
            "type": "string",
            "description": "Configuration mode for the backup set",
            "example": "NA"
          }
        }
      },
      "GetResourceStatusReportDataResponse": {
        "title": "GetResourceStatusReportDataResponse",
        "type": "object",
        "properties": {
          "data::": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ResourceStatusReportData" }
          },
          "lastSyncTimestamp": {
            "type": "string",
            "description": "Time stamp of the report data, in UTC format.",
            "format": "date-time"
          },
          "filters": {
            "type": "object",
            "properties": {},
            "description": "The filters applied on the report."
          },
          "nextPageToken": {
            "type": "string",
            "description": "The token to access the next page of results. This parameter will be empty for the last page of the results. This token is valid for 5 minutes.",
            "example": "YTBDNDk6Rjk1MmViY1FpTVpBejNFTU9lSWxzUT09OjA="
          }
        }
      },
      "ResourceStatusReportData": {
        "title": "ResourceStatusReportData",
        "type": "object",
        "properties": {
          "customerGlobalId": {
            "type": "string",
            "description": "Unique ID of the customer.",
            "example": "bde7f8c2-d063-4a4a-9a8f-c2ea5aff42f3-198"
          },
          "accountName": {
            "description": "Account name defined for the customer",
            "type": "string",
            "example": "Druva"
          },
          "customerName": {
            "description": "Customer name defined for the customer ",
            "type": "string",
            "example": "Druva"
          },
          "backupEnabled": {
            "type": "string",
            "description": "The status of the backup set, whether it is enabled for backup.",
            "example": "Yes"
          },
          "backupsetType": {
            "type": "string",
            "description": "The type of the backup set created for the resource. For example, Files, VMware, and so on.",
            "example": "Files"
          },
          "clientVersion": {
            "type": "string",
            "description": "The version of the agent installed.",
            "example": "6.2.0"
          },
          "osVersion": {
            "type": "string",
            "description": "The version of the operating system of the resource.",
            "example": "Windows-2012Server-6.2.9200-SP0 (64bit)"
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the resource configured for backup.",
            "example": "spryiq_Win2k12-Client2"
          },
          "backupset": {
            "type": "string",
            "description": "The name of the backup set associated with the resource.",
            "example": "spryiq_Win2k12-Client2#bset6"
          },
          "administrativeGroup": {
            "type": "string",
            "description": "The name of the administrative group of the workload.",
            "example": "admin_org-1"
          },
          "organization": {
            "type": "string",
            "description": "The name of the organization.",
            "example": "org-1"
          },
          "lastUpdatedTime": {
            "type": "string",
            "description": "The last updated time of a report, in the UTC format.",
            "format": "date-time",
            "example": "2023-06-03T02:22:34.383Z"
          },
          "timezone": { "type": "string", "example": "Asia/Calcutta" },
          "backupContent": {
            "type": "string",
            "description": "Details of the files included in & excluded from the backup.",
            "example": "Backup Folders- All Folders"
          },
          "backupPolicy": {
            "type": "string",
            "description": "The backup policy associated with the resource.",
            "example": "BackupPolicy1org2"
          },
          "storageTier": {
            "type": "string",
            "description": "Type of storage tier.",
            "example": "WARM"
          },
          "configurationMode": {
            "type": "string",
            "description": "This field indicates how the Azure Virtual Machine (VM) is configured. It will contain either \"Auto Configuration\" or \"Manual Configuration\" \n - **Auto Configuration:** The VM is configured with an Auto Configuration Rule. The name of the specific rule will be included in this field.\n - **Manual Configuration:** The VM does not have an Auto Configuration Rule applied. It is likely configured manually.",
            "example": "AC-naz_356"
          },
          "azureRegion": {
            "type": "string",
            "description": "This field specifies the geographical location where the Azure Virtual Machine (VM) resides. Example: eastus.",
            "example": "eastus"
          },
          "azureSubscription": {
            "type": "string",
            "description": "This field specifies the Azure subscription where the Virtual Machine (VM) is deployed.",
            "example": "Product Environment"
          }
        }
      },
      "GetStorageConsumptionbyBackupSetsReportDataResponse": {
        "title": "GetStorageConsumptionbyBackupSetsReportDataResponse",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StorageConsumptionbyBackupSetsReportData"
            }
          },
          "lastSyncTimestamp": {
            "type": "string",
            "description": "Time stamp of the report data, in UTC format.",
            "format": "date-time"
          },
          "filters": {
            "type": "object",
            "properties": {},
            "description": "The filters applied on the report."
          },
          "nextPageToken": {
            "type": "string",
            "description": "The token to access the next page of results. This parameter will be empty for the last page of the results. This token is valid for 5 minutes.",
            "example": "YTBDNDk6Rjk1MmViY1FpTVpBejNFTU9lSWxzUT09OjA="
          }
        }
      },
      "StorageConsumptionbyBackupSetsReportData": {
        "title": "StorageConsumptionbyBackupSetsReportData",
        "type": "object",
        "properties": {
          "customerGlobalId": {
            "type": "string",
            "description": "Unique ID of the customer.",
            "example": "bde7f8c2-d063-4a4a-9a8f-c2ea5aff42f3-198"
          },
          "accountName": {
            "description": "Account name defined for the customer",
            "type": "string",
            "example": "Druva"
          },
          "customerName": {
            "description": "Customer name defined for the customer ",
            "type": "string",
            "example": "Druva"
          },
          "lastUpdatedTime": {
            "type": "string",
            "description": "The last updated time of a report, in the UTC format.",
            "format": "date-time",
            "example": "2023-06-04T10:05:18.493Z"
          },
          "currentSource": {
            "type": "string",
            "description": "The size of the data on the source servers, databases, and virtual machines at the time of the last backup.",
            "example": "14.74MB"
          },
          "estimatedStorage": {
            "type": "string",
            "description": "The ratio of \"Source+Changes\" to Storage. This number is an estimate and it may change with the actual data stored on the cloud.",
            "example": "10.53MB"
          },
          "sourceChanges": {
            "type": "string",
            "description": "The amount of backup data generated at the source. This includes the initial full backup and incremental data from all subsequent backups.",
            "example": "14.74MB"
          },
          "storageSourceReductionFactor": {
            "type": "string",
            "description": "The ratio of Source+Change to the Druva storage.",
            "example": "fsnasst(1.4x)"
          },
          "backupPolicy": {
            "type": "string",
            "description": "The backup policy associated with the resource.",
            "example": "BackupPolicy1org2"
          },
          "backupContent": {
            "type": "string",
            "description": "The content rule or the custom content applied to the resource for backup.For Oracle and MS-SQL Servers, this field displays the number of databases included in the backup.",
            "example": "Backup Folders: ['E:\\backup\\File31']"
          },
          "backupSetType": {
            "type": "string",
            "description": "The type of the backup set of the resource.",
            "example": "Files"
          },
          "backupSet": {
            "type": "string",
            "description": "The name of the backup set associated with a workload.",
            "example": "WIN-L8HL4FNA0KB#bset3"
          },
          "administrativeGroup": {
            "type": "string",
            "description": "The name of the administrative group of the workload.",
            "example": "admin_org_2"
          },
          "organization": {
            "type": "string",
            "description": "The name of the organization in which the workload is configured.",
            "example": "org_2"
          },
          "storageTier": {
            "type": "string",
            "description": "Type of storage tier.",
            "example": "None"
          },
          "warmThreshold": { "type": "string", "example": 15 }
        }
      },
      "GetDisasterRecoveryReplicationActivityReportDataResponse": {
        "title": "GetDisasterRecoveryReplicationActivityReportDataResponse",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DisasterRecoveryReplicationActivityReportData"
            }
          },
          "lastSyncTimestamp": {
            "type": "string",
            "description": "Time stamp of the report data, in UTC format.",
            "format": "date-time"
          },
          "filters": {
            "type": "object",
            "properties": {},
            "description": "The filters applied on the report."
          },
          "nextPageToken": {
            "type": "string",
            "description": "The token to access the next page of results. This parameter will be empty for the last page of the results. This token is valid for 5 minutes.",
            "example": "YTBDNDk6Rjk1MmViY1FpTVpBejNFTU9lSWxzUT09OjA="
          }
        }
      },
      "DisasterRecoveryReplicationActivityReportData": {
        "title": "DisasterRecoveryReplicationActivityReportData",
        "type": "object",
        "properties": {
          "customerGlobalId": {
            "type": "string",
            "description": "Unique ID of the customer.",
            "example": "bde7f8c2-d063-4a4a-9a8f-c2ea5aff42f3-198"
          },
          "accountName": {
            "description": "Account name defined for the customer",
            "type": "string",
            "example": "Druva"
          },
          "customerName": {
            "description": "Customer name defined for the customer ",
            "type": "string",
            "example": "Druva"
          },
          "lastUpdatedTime": {
            "type": "string",
            "description": "The last updated time of a report, in the UTC format.",
            "format": "date-time",
            "example": "2023-06-05T08:37:28.593Z"
          },
          "ended": {
            "type": "string",
            "description": "The date and time when the DR Replication ended.",
            "format": "date-time",
            "example": "2023-06-04T01:37:28.593Z"
          },
          "started": {
            "type": "string",
            "description": "The date and time when the DR Replication first occurred.",
            "format": "date-time",
            "example": "2023-06-04T08:37:28.593Z"
          },
          "scheduled": {
            "type": "string",
            "description": "The time and date when the DR Replication restore is scheduled.",
            "format": "date-time",
            "example": "2023-06-05T09:37:28.593Z"
          },
          "jobID": {
            "type": "integer",
            "description": "The unique identification number of the DR Replication job.",
            "example": 101
          },
          "details": {
            "type": "string",
            "description": "The details of the DR Replication Job. For example, Cancelled.",
            "example": "Update DR Copy Successfully"
          },
          "awsAccountAndRegion": {
            "type": "string",
            "description": "The name of the AWS account and region.",
            "example": ""
          },
          "status": {
            "type": "string",
            "description": "The status of the DR Replication Job. For example, Cancelled, Failed, and Successful.",
            "example": "Failed"
          },
          "vm": {
            "type": "string",
            "description": "The name of the virtual machine.",
            "example": "Windows_2K12_uefi_R2"
          },
          "drPlanName": {
            "type": "string",
            "description": "The name of the DR Plan.",
            "example": "Lin"
          },
          "organization": {
            "type": "string",
            "description": "The name of the organization.",
            "example": "Default Organization"
          }
        }
      },
      "GetDisasterRecoveryFailbackActivityReportDataResponse": {
        "title": "GetDisasterRecoveryFailbackActivityReportDataResponse",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DisasterRecoveryFailbackActivityReportData"
            }
          },
          "lastSyncTimestamp": {
            "type": "string",
            "description": "Time stamp of the report data, in UTC format.",
            "format": "date-time"
          },
          "filters": {
            "type": "object",
            "properties": {},
            "description": "The filters applied on the report."
          },
          "nextPageToken": {
            "type": "string",
            "description": "The token to access the next page of results. This parameter will be empty for the last page of the results. This token is valid for 5 minutes.",
            "example": "YTBDNDk6Rjk1MmViY1FpTVpBejNFTU9lSWxzUT09OjA="
          }
        }
      },
      "DisasterRecoveryFailbackActivityReportData": {
        "title": "DisasterRecoveryFailbackActivityReportData",
        "type": "object",
        "properties": {
          "lastUpdatedTime": {
            "type": "string",
            "description": "The last updated time of a report, in the UTC format.",
            "format": "date-time",
            "example": "2023-06-03T05:56:35.093Z"
          },
          "customerGlobalId": {
            "type": "string",
            "description": "Unique ID of the customer.",
            "example": "bde7f8c2-d063-4a4a-9a8f-c2ea5aff42f3-198"
          },
          "accountName": {
            "description": "Account name defined for the customer",
            "type": "string",
            "example": "Druva"
          },
          "customerName": {
            "description": "Customer name defined for the customer ",
            "type": "string",
            "example": "Druva"
          },
          "ended": {
            "type": "string",
            "description": "The date and time when the DR Failback ended.",
            "format": "date-time",
            "example": "2023-06-03T09:56:35.093Z"
          },
          "started": {
            "type": "string",
            "description": "The date and time when the DR Failback first occurred.",
            "format": "date-time",
            "example": "2023-06-03T07:56:35.093Z"
          },
          "jobID": {
            "type": "integer",
            "description": "The unique identification number of the DR Failback job.",
            "example": 1001
          },
          "details": {
            "type": "string",
            "description": "The details of the DR Failback Job. For example, Cancelled.",
            "example": "Cancelled"
          },
          "destinationVCenterESXi": {
            "type": "string",
            "description": "The destination of the vCenter/ESXi setup where the instance must failback.",
            "example": "112.16.15.111"
          },
          "organization": {
            "type": "string",
            "description": "The name of the organization.",
            "example": "org-1"
          },
          "drPlanName": {
            "type": "string",
            "description": "The name of the DR Plan.",
            "example": "Lin"
          }
        }
      },
      "GetDisasterRecoveryFailoverActivityReportDataResponse": {
        "title": "GetDisasterRecoveryFailoverActivityReportDataResponse",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DisasterRecoveryFailoverActivityReportData"
            }
          },
          "lastSyncTimestamp": {
            "type": "string",
            "description": "Time stamp of the report data, in UTC format.",
            "format": "date-time"
          },
          "filters": {
            "type": "object",
            "properties": {},
            "description": "The filters applied on the report."
          },
          "nextPageToken": {
            "type": "string",
            "description": "The token to access the next page of results. This parameter will be empty for the last page of the results. This token is valid for 5 minutes.",
            "example": "YTBDNDk6Rjk1MmViY1FpTVpBejNFTU9lSWxzUT09OjA="
          }
        }
      },
      "DisasterRecoveryFailoverActivityReportData": {
        "title": "DisasterRecoveryFailoverActivityReportData",
        "type": "object",
        "properties": {
          "lastUpdatedTime": {
            "type": "string",
            "description": "The last updated time of a report, in the UTC format.",
            "format": "date-time",
            "example": "2023-06-04T08:22:34.383Z"
          },
          "customerGlobalId": {
            "type": "string",
            "description": "Unique ID of the customer.",
            "example": "bde7f8c2-d063-4a4a-9a8f-c2ea5aff42f3-198"
          },
          "accountName": {
            "description": "Account name defined for the customer",
            "type": "string",
            "example": "Druva"
          },
          "customerName": {
            "description": "Customer name defined for the customer ",
            "type": "string",
            "example": "Druva"
          },
          "duration": {
            "type": "string",
            "description": "The duration of the DR Failover along with the date and time.",
            "format": "date-time"
          },
          "ended": {
            "type": "string",
            "description": "The date and time when the DR Failover ended.",
            "format": "date-time",
            "example": "2023-06-03T09:22:34.383Z"
          },
          "started": {
            "type": "string",
            "description": "The date and time when the DR Failover first occurred.",
            "format": "date-time",
            "example": "2023-06-03T07:22:34.383Z"
          },
          "jobID": {
            "type": "integer",
            "description": "The unique identification number of the DR Failover job.",
            "example": 1345
          },
          "status": {
            "type": "string",
            "description": "The status of the DR Failover Job. For example, Cancelled, Failed, and Successful.",
            "example": "Successful"
          },
          "instanceDetails": {
            "type": "string",
            "description": "The details of the restoration for a DR Failover along with date and time. For example, Restore Point.",
            "example": "Restore point: Thu Nov 17 15:06:12 2022 EC2 Instance ID: i-0d72873392290acax"
          },
          "failoverEndTime": {
            "type": "string",
            "description": "The date and time when the DR Failover ended.",
            "format": "date-time",
            "example": "2023-06-03T03:22:34.383Z"
          },
          "failoverStartTime": {
            "type": "string",
            "description": "The date and time when the DR Failover first occurred.",
            "format": "date-time",
            "example": "2023-06-03T02:22:34.383Z"
          },
          "vmName": {
            "type": "string",
            "description": "The name of the virtual machine.",
            "example": "vm-123"
          },
          "recoveryStep": {
            "type": "string",
            "description": "The restoration action taken for any disaster scenario.",
            "example": "Step: 1 - VM Boot"
          },
          "details": {
            "type": "string",
            "description": "The details of the DR Failover Job. For example, Cancelled.",
            "example": "Successful"
          }
        }
      },
      "GetAlertReportDataResponse": {
        "title": "GetAlertReportDataResponse",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/AlertReportData" }
          },
          "lastSyncTimestamp": {
            "type": "string",
            "description": "The time stamp until which the report data was returned. The time is in the UTC time zone.",
            "format": "date-time"
          },
          "filters": {
            "type": "object",
            "properties": {},
            "description": "Filters applied on the report."
          },
          "nextPageToken": {
            "type": "string",
            "description": "The token to access the next page of results. This parameter will be empty for the last page of the results. This token is valid for 5 minutes.",
            "example": "YTBDNDk6Rjk1MmViY1FpTVpBejNFTU9lSWxzUT09OjA="
          }
        }
      },
      "AlertReportData": {
        "title": "AlertReportData",
        "type": "object",
        "properties": {
          "customerGlobalId": {
            "type": "string",
            "description": "Unique ID of the customer.",
            "example": "bde7f8c2-d063-4a4a-9a8f-c2ea5aff42f3-198"
          },
          "accountName": {
            "description": "Account name defined for the customer",
            "type": "string",
            "example": "Druva"
          },
          "customerName": {
            "description": "Customer name defined for the customer ",
            "type": "string",
            "example": "Druva"
          },
          "entity": {
            "type": "string",
            "description": "The username and device of the user.",
            "example": "user_iobvl:DESKTOP-514PMN2"
          },
          "alertDetails": {
            "type": "string",
            "description": "The details about the alert generated.",
            "example": "Misconfigured Backup Folder"
          },
          "firstOccurrence": {
            "type": "string",
            "description": "The date and time when the alert was generated for the first time. The time is in the UTC time zone. Example - 2019-10-25T00:00:00Z",
            "format": "date-time",
            "example": "2022-12-01T13:50:35.369Z"
          },
          "lastOccurrence": {
            "type": "string",
            "description": "The date and time when the alert was generated for the last time. The time is in the UTC time zone. Example - 2019-10-25T00:00:00Z",
            "format": "date-time",
            "example": "2023-01-01T13:50:35.369Z"
          },
          "active": {
            "type": "string",
            "description": "Displays information whether the alert generated is active or not.",
            "example": "No"
          },
          "severity": {
            "type": "string",
            "description": "Displays the severity type of the alert. Example:- critical, high, warning.",
            "example": "Warning"
          }
        }
      },
      "GetUsersReportDataResponse": {
        "title": "GetUsersReportDataResponse",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UsersReportData" },
            "x-go-name": "Data"
          },
          "lastSyncTimestamp": {
            "type": "string",
            "description": "The time stamp until which the report data was returned. The time is in the UTC time zone.",
            "format": "date-time"
          },
          "filters": {
            "type": "object",
            "properties": {},
            "description": "Filters applied on the report."
          },
          "nextPageToken": {
            "type": "string",
            "description": "The token to access the next page of results. This parameter will be empty for the last page of the results. This token is valid for 5 minutes.",
            "example": "YTBDNDk6Rjk1MmViY1FpTVpBejNFTU9lSWxzUT09OjA="
          }
        }
      },
      "UsersReportData": {
        "title": "UsersReportData",
        "type": "object",
        "properties": {
          "customerGlobalId": {
            "type": "string",
            "description": "Unique ID of the customer.",
            "example": "bde7f8c2-d063-4a4a-9a8f-c2ea5aff42f3-198"
          },
          "accountName": {
            "description": "Account name defined for the customer",
            "type": "string",
            "example": "Druva"
          },
          "customerName": {
            "description": "Customer name defined for the customer ",
            "type": "string",
            "example": "Druva"
          },
          "fromDate": {
            "type": "string",
            "description": "For Weekly report- The start date of the weekly report. For the Monthly report- The start date of the monthly report. The time is in the UTC time zone. Example- 2019-10-25T00:00:00Z00:00",
            "format": "date-time",
            "example": "2022-06-03T14:34:11.532Z"
          },
          "toDate": {
            "type": "string",
            "description": "For Weekly report- The end date of the weekly report. For the Monthly report- The end date of the monthly report. The time is in the UTC time zone. Example- 2019-10-25T00:00:00Z00:00",
            "format": "date-time",
            "example": "2023-09-03T14:34:11.532Z"
          },
          "totalUsers": {
            "type": "integer",
            "description": "The total number of users available in Endpoints for a given week or month.",
            "example": 7
          },
          "totalPreservedUsers": {
            "type": "integer",
            "description": "The total number of users that are preserved in Endpoints to date for a given week or month.",
            "example": 3
          },
          "usersAdded": {
            "type": "integer",
            "description": "The number of users that are added to Endpoints for a given week or month.",
            "example": 10
          },
          "usersDeleted": {
            "type": "integer",
            "description": "The number of users that are deleted from Endpoints for a given week or month.",
            "example": 3
          },
          "usersPreserved": {
            "type": "integer",
            "description": "The number of users that are preserved in Endpoints for a given week or month.",
            "example": 3
          }
        }
      },
      "GetLicenseUsageReportDataResponse": {
        "title": "GetLicenseUsageReportDataResponse",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/LicenseUsageReportData" }
          },
          "lastSyncTimestamp": {
            "type": "string",
            "description": "The time stamp until which the report data was returned. The time is in the UTC time zone.",
            "format": "date-time"
          },
          "filters": {
            "type": "object",
            "properties": {},
            "description": "Filters applied on the report."
          },
          "nextPageToken": {
            "type": "string",
            "description": "The token to access the next page of results. This parameter will be empty for the last page of the results. This token is valid for 5 minutes.",
            "example": "YTBDNDk6Rjk1MmViY1FpTVpBejNFTU9lSWxzUT09OjA="
          }
        }
      },
      "LicenseUsageReportData": {
        "title": "LicenseUsageReportData",
        "type": "object",
        "properties": {
          "customerGlobalId": {
            "type": "string",
            "description": "Unique ID of the customer.",
            "example": "bde7f8c2-d063-4a4a-9a8f-c2ea5aff42f3-198"
          },
          "accountName": {
            "description": "Account name defined for the customer",
            "type": "string",
            "example": "Druva"
          },
          "customerName": {
            "description": "Customer name defined for the customer ",
            "type": "string",
            "example": "Druva"
          },
          "fromDate": {
            "type": "string",
            "description": "For Weekly report- The start date of the weekly report. For the Monthly report- The start date of the monthly report. The time is in the UTC time zone. Example- 2019-10-25T00:00:00Z00:00",
            "format": "date-time",
            "example": "2022-06-03T14:34:11.532Z"
          },
          "toDate": {
            "type": "string",
            "description": "For Weekly report- The end date of the weekly report. For the Monthly report- The end date of the monthly report. The time is in the UTC time zone. Example- 2019-10-25T00:00:00Z00:00",
            "format": "date-time",
            "example": "2023-09-03T14:34:11.532Z"
          },
          "usersAdded": {
            "type": "integer",
            "description": "For Weekly report- The total number of users added for a given week. For the Monthly report- The total number of users added to Endpoints for a given month.",
            "example": 10
          },
          "usersDeleted": {
            "type": "integer",
            "description": "For Weekly report- The total number of users deleted for a given week. For the Monthly report- The total number of users deleted from Endpoints for a given month.",
            "example": 3
          },
          "totalActiveLicense": {
            "type": "integer",
            "description": "For Weekly report- The total number of Endpoints active licenses that are allocated in Endpoints to date for a given week. For the Monthly report- The total number of Endpoints active licenses that are allocated in Endpoints to date for a given month.",
            "example": 2
          },
          "activeLicenseUsed": {
            "type": "integer",
            "description": "For Weekly report- The total number of Endpoints active licenses that are consumed in Endpoints to date for a given week. For the Monthly report- The total number of Endpoints active licenses that are consumed in Endpoints to date for a given month.",
            "example": 1
          },
          "totalPreservedLicense": {
            "type": "integer",
            "description": "For Weekly report- The total number of Endpoints preserved licenses that are allocated in Endpoints to date for a given week. For the Monthly report- The total number of Endpoints preserved licenses that are allocated in Endpoints to date for a given month.",
            "example": 1
          },
          "preservedLicenseUsed": {
            "type": "integer",
            "description": "For Weekly report- The total number of Endpoints preserved licenses that are consumed in Endpoints to date for a given week. For the Monthly report- The total number of Endpoints preserved licenses that are consumed in Endpoints to date for a given month.",
            "example": 1
          }
        }
      },
      "GetUserProvisioningReportDataResponse": {
        "title": "GetUserProvisioningReportDataResponse",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserProvisioningReportData"
            }
          },
          "lastSyncTimestamp": {
            "type": "string",
            "description": "The time stamp until which the report data was returned. The time is in the UTC time zone.",
            "format": "date-time"
          },
          "filters": {
            "type": "object",
            "properties": {},
            "description": "Filters applied on the report."
          },
          "nextPageToken": {
            "type": "string",
            "description": "The token to access the next page of results. This parameter will be empty for the last page of the results. This token is valid for 5 minutes.",
            "example": "YTBDNDk6Rjk1MmViY1FpTVpBejNFTU9lSWxzUT09OjA="
          }
        }
      },
      "UserProvisioningReportData": {
        "title": "UserProvisioningReportData",
        "type": "object",
        "properties": {
          "customerGlobalId": {
            "type": "string",
            "description": "Unique ID of the customer.",
            "example": "bde7f8c2-d063-4a4a-9a8f-c2ea5aff42f3-198"
          },
          "accountName": {
            "description": "Account name defined for the customer",
            "type": "string",
            "example": "Druva"
          },
          "customerName": {
            "description": "Customer name defined for the customer ",
            "type": "string",
            "example": "Druva"
          },
          "lastUpdatedTime": {
            "type": "string",
            "description": "The last updated time stamp for the record. The time is in the UTC time zone. Example - 2019-10-25T00:00:00Z",
            "format": "date-time"
          },
          "userName": {
            "type": "string",
            "description": "Displays the user name of the Endpoints user provisioned using the IdP.",
            "example": "user1"
          },
          "userEmail": {
            "type": "string",
            "description": "Displays the email address of the user.",
            "example": "user1@d.in"
          },
          "profile": {
            "type": "string",
            "description": "Displays the name of the profile the user is associated with in Endpoints.",
            "example": "Default"
          },
          "userStatus": {
            "type": "string",
            "description": "Displays the user status in Endpoints.",
            "example": "Active"
          },
          "endpointsLicense": {
            "type": "string",
            "description": "Displays the Endpoints license status. For example, active, preserved or -, wherein - represents the unlicensed state.",
            "example": "Active"
          },
          "endpointsUsageMB": {
            "type": "integer",
            "description": "The amount of data backed up by the user.",
            "example": 30520
          },
          "isDeleted": {
            "type": "integer",
            "description": "Indicates the current status of the user account.\n1- The user account is deleted.\n0- The user account is active.",
            "example": 0
          },
          "createdOn": {
            "type": "string",
            "description": "Displays the user account creation date in Endpoints. The time is in the UTC time zone.",
            "format": "date-time",
            "example": "2022-08-03T13:21:27.960Z"
          },
          "managedBy": {
            "type": "string",
            "description": "Displays the name of IdP which is managing the user in Endpoints.",
            "example": "Manually"
          },
          "customAttributeValue": {
            "type": "string",
            "description": "The value of the attribute in the AD server.",
            "example": "attributeVal"
          },
          "customAttributeName": {
            "type": "string",
            "description": "Name of the attribute in the AD server.",
            "example": "attributeName"
          }
        }
      },
      "GetUserRolloutReportDataResponse": {
        "title": "GetUserRolloutReportDataResponse",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UserRolloutReportData" }
          },
          "lastSyncTimestamp": {
            "type": "string",
            "description": "The time stamp until which the report data was returned. The time is in the UTC time zone.",
            "format": "date-time"
          },
          "filters": {
            "type": "object",
            "properties": {},
            "description": "Filters applied on the report."
          },
          "nextPageToken": {
            "type": "string",
            "description": "The token to access the next page of results. This parameter will be empty for the last page of the results. This token is valid for 5 minutes.",
            "example": "YTBDNDk6Rjk1MmViY1FpTVpBejNFTU9lSWxzUT09OjA="
          }
        }
      },
      "UserRolloutReportData": {
        "title": "UserRolloutReportData",
        "type": "object",
        "properties": {
          "customerGlobalId": {
            "type": "string",
            "description": "Unique ID of the customer.",
            "example": "bde7f8c2-d063-4a4a-9a8f-c2ea5aff42f3-198"
          },
          "accountName": {
            "description": "Account name defined for the customer",
            "type": "string",
            "example": "Druva"
          },
          "customerName": {
            "description": "Customer name defined for the customer ",
            "type": "string",
            "example": "Druva"
          },
          "lastUpdatedTime": {
            "type": "string",
            "description": "The last updated time stamp for the record. The time is in the UTC time zone. Example - 2019-10-25T00:00:00Z",
            "format": "date-time",
            "example": "2023-06-02T15:03:30.412Z"
          },
          "userName": {
            "type": "string",
            "description": "Displays the user name to whom the device belongs.",
            "example": "user1"
          },
          "userEmail": {
            "type": "string",
            "description": "Displays the email ID of the user to whom the device belongs.",
            "example": "usr1@d.in"
          },
          "customAttributeValue": {
            "type": "string",
            "description": "The value of the attribute in the AD server.",
            "example": "cust-attr-val"
          },
          "customAttributeName": {
            "type": "string",
            "description": "Name of the attribute in the AD server.",
            "example": "cust-attr-name"
          },
          "addedOn": {
            "type": "string",
            "description": "The date and time when the user was added. The time is in the UTC time zone.",
            "format": "date-time",
            "example": "2023-04-03T15:03:30.412Z"
          },
          "profileName": {
            "type": "string",
            "description": "Displays the name of the profile with which the user is associated.",
            "example": "profileC"
          },
          "licenseData": {
            "type": "string",
            "description": "The status of the license of the workload, the data source belongs to. For example, active, preserve or \"-\", where \"-\" indicates unlicensed state.",
            "example": "Active"
          },
          "source": {
            "type": "string",
            "description": "The name of the device which the user is associated with.",
            "example": "DESKTOP-514PMN2"
          },
          "activatedOn": {
            "type": "string",
            "description": "The date and time when the device was activated.",
            "example": "2023-04-03T16:47:36.000Z"
          },
          "systemSettings": {
            "type": "string",
            "description": "The status of whether the device's system settings were backed up.",
            "example": "Not Backed Up"
          },
          "lastBackupStatus": {
            "type": "string",
            "description": "The status of the last backup operation.",
            "example": "Backed Up Successfully"
          },
          "isDeleted": {
            "type": "integer",
            "description": "Indicates the current status of the user account.\n1- The user account is deleted.\n0- The user account is active.",
            "example": 0
          },
          "lastBackupTime": {
            "type": "string",
            "description": "The time taken(Unix format) for the last backup operation to complete in hours and minutes.",
            "example": "1685424078"
          },
          "firstBackupStatus": {
            "type": "string",
            "description": "The status of the first backup operation.",
            "example": "Complete"
          },
          "firstBackupSizeMB": {
            "type": "string",
            "description": "The size of the files in MB that were backed up during the last backup operation.",
            "example": "128515"
          },
          "bytesTransferredMB": {
            "type": "string",
            "description": "The number of bytes transferred during backup.",
            "example": "77240"
          },
          "timeTakenHhMm": {
            "type": "string",
            "description": "The time taken for the backup operation to complete in hours and minutes.",
            "example": "0:00"
          },
          "clientVersion": {
            "type": "string",
            "description": "The version of inSync Client on the user device.",
            "example": "6.2.0"
          },
          "osPlatform": {
            "type": "string",
            "description": "The operating system platform on the user device.",
            "example": "Windows"
          },
          "lastUpgradedOn": {
            "type": "string",
            "description": "The date and time when the inSync Client on the user device was last upgraded. Example - 2019-10-25T00:00:00Z.",
            "example": ""
          },
          "upgradeState": {
            "type": "string",
            "description": "The upgrade state of inSync Client on the user device. This field shows one of the following values- UPGRADEABLE, NOT UPGRADABLE, UPTODATE",
            "example": "NOT UPGRADABLE"
          },
          "deviceOS": {
            "type": "string",
            "description": "The operating system platform on the user device.",
            "example": "Win 10"
          }
        }
      },
      "GetLastBackupStatusReportDataResponse": {
        "title": "GetLastBackupStatusReportDataResponse",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LastBackupStatusReportData"
            }
          },
          "lastSyncTimestamp": {
            "type": "string",
            "description": "The time stamp until which the report data was returned. The time is in the UTC time zone.",
            "format": "date-time"
          },
          "filters": {
            "type": "object",
            "properties": {},
            "description": "Filters applied on the report."
          },
          "nextPageToken": {
            "type": "string",
            "description": "The token to access the next page of results. This parameter will be empty for the last page of the results. This token is valid for 5 minutes.",
            "example": "YTBDNDk6Rjk1MmViY1FpTVpBejNFTU9lSWxzUT09OjA="
          }
        }
      },
      "LastBackupStatusReportData": {
        "title": "LastBackupStatusReportData",
        "type": "object",
        "properties": {
          "customerGlobalId": {
            "type": "string",
            "description": "Unique ID of the customer.",
            "example": "bde7f8c2-d063-4a4a-9a8f-c2ea5aff42f3-198"
          },
          "accountName": {
            "description": "Account name defined for the customer",
            "type": "string",
            "example": "Druva"
          },
          "customerName": {
            "description": "Customer name defined for the customer ",
            "type": "string",
            "example": "Druva"
          },
          "lastUpdatedTime": {
            "type": "string",
            "description": "The last updated time stamp for the record. The time is in the UTC time zone. Example - 2019-10-25T00:00:00Z",
            "format": "date-time",
            "example": "2023-06-01T13:30:41.951Z"
          },
          "userName": {
            "type": "string",
            "description": "The name of the user.",
            "example": "user1"
          },
          "userEmailID": {
            "type": "string",
            "description": "The email address of the user.",
            "example": "user1@d.in"
          },
          "device": {
            "type": "string",
            "description": "The name of the device registered for the user.",
            "example": "DESKTOP-SM857S52"
          },
          "profile": {
            "type": "string",
            "description": "The profile that is assigned to the user.",
            "example": "profileC"
          },
          "clientVersion": {
            "type": "string",
            "description": "The version of inSync client installed on the user's device.",
            "example": "6.2.0"
          },
          "osPlatform": {
            "type": "string",
            "description": "The name, version, and platform details of the operating system running on the user's device.",
            "example": "Windows"
          },
          "deviceStatus": {
            "type": "string",
            "description": "The backup status of the device. For example, Enabled.",
            "example": "Enabled"
          },
          "startTime": {
            "type": "string",
            "description": "The date and time on which the backup started. Example - 2019-10-25T00:00:00Z",
            "example": "2023-06-01T13:30:41.951Z"
          },
          "endTime": {
            "type": "string",
            "description": "The date and time on which the backup was completed. Example - 2019-10-25T00:00:00Z",
            "example": "2023-06-01T16:30:41.951Z"
          },
          "filesBackedUp": {
            "type": "integer",
            "description": "The number of files and folders that are backed up.",
            "example": 105
          },
          "filesMissed": {
            "type": "integer",
            "description": "The number of files and folders that Endpoints was not able to back up.",
            "example": 2
          },
          "isDeleted": {
            "type": "integer",
            "description": "Indicates the status of the device.\n1- The device is deleted\n0- The device is active",
            "example": 0
          },
          "status": {
            "type": "string",
            "description": "The status of the backup operation. A device can have the following backup statuses-Backup Failed, Never Backed Up, Backed Up With Errors, Backed Up Successfully.",
            "example": "Success"
          },
          "bytesTransferredMB": {
            "type": "integer",
            "description": "The number of bytes transferred during backup.",
            "example": 12778
          },
          "deviceConnectivity": {
            "type": "string",
            "description": "Displays information about the device connectivity status - active or inactive.",
            "example": "Active"
          },
          "timeTakenMinutes": {
            "type": "integer",
            "description": "Displays the total time taken for the backup.",
            "example": 18
          }
        }
      },
      "GetStorageStatisticsReportDataResponse": {
        "title": "GetStorageStatisticsReportDataResponse",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StorageStatisticsReportData"
            }
          },
          "lastSyncTimestamp": {
            "type": "string",
            "description": "The time stamp until which the report data was returned. The time is in the UTC time zone.",
            "format": "date-time"
          },
          "filters": {
            "type": "object",
            "properties": {},
            "description": "Filters applied on the report."
          },
          "nextPageToken": {
            "type": "string",
            "description": "The token to access the next page of results. This parameter will be empty for the last page of the results. This token is valid for 5 minutes.",
            "example": "YTBDNDk6Rjk1MmViY1FpTVpBejNFTU9lSWxzUT09OjA="
          }
        }
      },
      "StorageStatisticsReportData": {
        "title": "StorageStatisticsReportData",
        "type": "object",
        "properties": {
          "customerGlobalId": {
            "type": "string",
            "description": "Unique ID of the customer.",
            "example": "bde7f8c2-d063-4a4a-9a8f-c2ea5aff42f3-198"
          },
          "accountName": {
            "description": "Account name defined for the customer",
            "type": "string",
            "example": "Druva"
          },
          "customerName": {
            "description": "Customer name defined for the customer",
            "type": "string",
            "example": "Druva"
          },
          "storageName": {
            "description": "Name of the storage",
            "type": "string",
            "example": "druva_us-east-1"
          },
          "lastUpdatedTime": {
            "type": "string",
            "description": "The last updated time stamp for the record. The time is in the UTC time zone. Example - 2019-10-25T00:00:00Z",
            "format": "date-time",
            "example": "2023-06-01T13:30:41.951Z"
          },
          "totalUsers": {
            "type": "integer",
            "description": "Total number of users.",
            "example": 100
          },
          "additionalDataUsageMB": {
            "type": "integer",
            "description": "Additional data used in MB.",
            "example": 12
          },
          "totalUsageMB": {
            "type": "integer",
            "description": "Total usage in MB.",
            "example": 20
          },
          "totalSizeOfBackedupFilesMB": {
            "type": "integer",
            "description": "Total backed up files size in MB.",
            "example": 50
          }
        }
      },
      "GetStorageAlertReportDataResponse": {
        "title": "GetStorageAlertReportDataResponse",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/StorageAlertReportData" }
          },
          "lastSyncTimestamp": {
            "type": "string",
            "description": "The time stamp until which the report data was returned. The time is in the UTC time zone.",
            "format": "date-time"
          },
          "filters": {
            "type": "object",
            "properties": {},
            "description": "Filters applied on the report."
          },
          "nextPageToken": {
            "type": "string",
            "description": "The token to access the next page of results. This parameter will be empty for the last page of the results. This token is valid for 5 minutes.",
            "example": "YTBDNDk6Rjk1MmViY1FpTVpBejNFTU9lSWxzUT09OjA="
          }
        }
      },
      "StorageAlertReportData": {
        "title": "StorageAlertReportData",
        "type": "object",
        "properties": {
          "customerGlobalId": {
            "type": "string",
            "description": "Unique ID of the customer.",
            "example": "bde7f8c2-d063-4a4a-9a8f-c2ea5aff42f3-198"
          },
          "accountName": {
            "description": "Account name defined for the customer",
            "type": "string",
            "example": "Druva"
          },
          "customerName": {
            "description": "Customer name defined for the customer",
            "type": "string",
            "example": "Druva"
          },
          "lastUpdatedTime": {
            "type": "string",
            "description": "The last updated time stamp for the record. The time is in the UTC time zone. Example - 2019-10-25T00:00:00Z",
            "format": "date-time",
            "example": "2023-06-01T13:30:41.951Z"
          },
          "entity": {
            "description": "Name of the entity",
            "type": "string",
            "example": "Administrator"
          },
          "alertDetails": {
            "type": "string",
            "description": "Details of the alert.",
            "example": "Low Storage Space Available"
          },
          "firstOccurrence": {
            "type": "string",
            "description": "First occurrence date of the alert.",
            "format": "date-time",
            "example": "2023-06-01T13:30:41.951Z"
          },
          "latestOccurrence": {
            "type": "string",
            "description": "Last occurrence date of the alert.",
            "format": "date-time",
            "example": "2023-06-01T13:30:41.951Z"
          },
          "active": {
            "type": "string",
            "description": "Defines alert is active or not.",
            "example": "Yes"
          }
        }
      },
      "GetCloudCacheReportDataResponse": {
        "title": "GetCloudCacheReportDataResponse",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/CloudCacheReportData" }
          },
          "lastSyncTimestamp": {
            "type": "string",
            "description": "The time stamp until which the report data was returned. The time is in the UTC time zone.",
            "format": "date-time"
          },
          "filters": {
            "type": "object",
            "properties": {},
            "description": "Filters applied on the report."
          },
          "nextPageToken": {
            "type": "string",
            "description": "The token to access the next page of results. This parameter will be empty for the last page of the results. This token is valid for 5 minutes.",
            "example": "YTBDNDk6Rjk1MmViY1FpTVpBejNFTU9lSWxzUT09OjA="
          }
        }
      },
      "CloudCacheReportData": {
        "title": "CloudCacheReportData",
        "type": "object",
        "properties": {
          "customerGlobalId": {
            "type": "string",
            "description": "Unique ID of the customer.",
            "example": "bde7f8c2-d063-4a4a-9a8f-c2ea5aff42f3-198"
          },
          "accountName": {
            "description": "Account name defined for the customer",
            "type": "string",
            "example": "Druva"
          },
          "customerName": {
            "description": "Customer name defined for the customer",
            "type": "string",
            "example": "Druva"
          },
          "lastUpdatedTime": {
            "type": "string",
            "description": "The last updated time stamp for the record. The time is in the UTC time zone. Example - 2019-10-25T00:00:00Z",
            "format": "date-time",
            "example": "2023-06-01T13:30:41.951Z"
          },
          "cloudCacheName": {
            "description": "Name of the cloud cache",
            "type": "string",
            "example": "cache--cloud"
          },
          "totalUsers": {
            "type": "integer",
            "description": "Total number of users.",
            "example": 25
          },
          "usersForRestore": {
            "type": "integer",
            "description": "Total number of users for restore.",
            "example": 2
          },
          "totalCacheSizeMB": {
            "type": "integer",
            "description": "Total cache size in MB.",
            "example": 500
          },
          "cacheUsageMB ": {
            "type": "integer",
            "description": "Total cache usage in MB.",
            "example": 345
          }
        }
      },
      "GetRollbackActionsReportDataResponse": {
        "title": "GetRollbackActionsReportDataResponse",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RollbackActionsReportData"
            }
          },
          "lastSyncTimestamp": {
            "type": "string",
            "description": "Time stamp until which report data is returned in the API. The time is in the UTC time zone.",
            "format": "date-time"
          },
          "filters": {
            "type": "object",
            "properties": {},
            "description": "Filters applied on the report."
          },
          "nextPageToken": {
            "type": "string",
            "description": "The token to access the next page of results. This parameter will be empty for the last page of the results. This token is valid for 5 minutes.",
            "example": "YTBDNDk6Rjk1MmViY1FpTVpBejNFTU9lSWxzUT09OjA="
          }
        }
      },
      "RollbackActionsReportData": {
        "title": "RollbackActionsReportData",
        "type": "object",
        "properties": {
          "customerGlobalId": {
            "type": "string",
            "description": "Unique ID of the customer.",
            "example": "bde7f8c2-d063-4a4a-9a8f-c2ea5aff42f3-198"
          },
          "accountName": {
            "description": "Account name defined for the customer",
            "type": "string",
            "example": "Druva"
          },
          "customerName": {
            "description": "Customer name defined for the customer",
            "type": "string",
            "example": "Druva"
          },
          "dataSize": {
            "type": "integer",
            "description": "The data size.",
            "format": "int64",
            "example": 20
          },
          "deleteRequestID": {
            "type": "string",
            "description": "Delete Request ID",
            "example": "11ef158d-929c-4841-ab83-0ca4179c1420"
          },
          "deletedBy": {
            "type": "string",
            "description": "The admin who deleted the entity.",
            "example": "rollbackTest rollbackTest"
          },
          "deletedDateTime": {
            "type": "string",
            "description": "The date on which the entity was deleted. The time is in the UTC time zone. Example - 2019-10-25T00:00:00Z",
            "format": "date-time",
            "example": "2023-04-26T10:53:52.000Z"
          },
          "deletionReason": {
            "type": "string",
            "description": "The reason for which the entity was deleted.",
            "example": "Automation testing - deletion for workload Teams"
          },
          "entityName": {
            "type": "string",
            "description": "The name of the entity.",
            "example": "entity-1"
          },
          "deletedItem": {
            "type": "string",
            "description": "Type of deleted entity",
            "example": "Snapshot"
          },
          "entityType": {
            "type": "string",
            "description": "The type of entity. (Endpoints, Exchange Online,File Servers,Google Drive,Google Mail,Groups,NAS,One Drive,Profiles,Public Folders,SharePoint,Shared Drives,Teams,Users, VMware)",
            "example": "SharePoint"
          },
          "rollbackDateTime": {
            "type": "string",
            "description": "The date on which the entity was rolled-back. The time is in the UTC time zone. Example - 2019-10-26T00:00:00Z",
            "format": "date-time",
            "example": "2023-04-26T10:57:51.000Z"
          },
          "rolledBackBy": {
            "type": "string",
            "description": "The admin who rolled-back the entity.",
            "example": "rollbackTest rollbackTest"
          },
          "status": {
            "type": "string",
            "description": "The status of the request. Possible values(Available for rollback, Permanently deleted, Rollback in progress, Rolled back)",
            "example": "Rolled back"
          },
          "permanentDeleteDate": {
            "type": "string",
            "description": "The date on which the entity will be permanently deleted if not rolled-back. Example - 2019-10-28T00:00:00Z",
            "format": "date-time",
            "example": "2023-04-28T10:57:51.000Z"
          },
          "lastUpdatedDateTime": {
            "type": "string",
            "description": "The last updated time stamp. The time is in the UTC time zone. Example - 2019-10-25T00:00:00Z",
            "format": "date-time",
            "example": "2023-04-26T11:00:56.000Z"
          }
        }
      },
      "GetDataProtectionRiskReportDataResponse": {
        "title": "GetDataProtectionRiskReportDataResponse",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataProtectionRiskReportData"
            }
          },
          "lastSyncTimestamp": {
            "type": "string",
            "description": "Time stamp until which report data is returned in the API. The time is in the UTC time zone.",
            "format": "date-time"
          },
          "filters": {
            "type": "object",
            "properties": {},
            "description": "Filters applied on the report."
          },
          "nextPageToken": {
            "type": "string",
            "description": "The token to access the next page of results. This parameter will be empty for the last page of the results. This token is valid for 5 minutes.",
            "example": "YTBDNDk6Rjk1MmViY1FpTVpBejNFTU9lSWxzUT09OjA="
          }
        }
      },
      "DataProtectionRiskReportData": {
        "title": "DataProtectionRiskReportData",
        "type": "object",
        "properties": {
          "customerGlobalId": {
            "type": "string",
            "description": "Unique ID of the customer.",
            "example": "bde7f8c2-d063-4a4a-9a8f-c2ea5aff42f3-198"
          },
          "accountName": {
            "description": "Account name defined for the customer",
            "type": "string",
            "example": "Druva"
          },
          "customerName": {
            "description": "Customer name defined for the customer",
            "type": "string",
            "example": "Druva"
          },
          "organization": {
            "type": "string",
            "description": "The name of the organization.",
            "example": "custom-org"
          },
          "workloadName": {
            "type": "string",
            "description": "The name of the workload. Possible values (Files, Hyper-V, MS-SQL, NAS, Oracle, Oracle-DTC, VMware)",
            "example": "Files"
          },
          "workloadAgent": {
            "type": "string",
            "description": "Name of the device associated with the workload.",
            "example": "device123"
          },
          "disconnectedFromCloudSince": {
            "type": "string",
            "description": "The date since which device is disconnected from cloud. The time is in the UTC time zone. Example - 2019-10-25T00:00:00Z",
            "example": "2023-04-28T10:57:51.000Z",
            "format": "date-time"
          },
          "lastUpdatedTime": {
            "type": "string",
            "description": "The last updated time stamp. The time is in the UTC time zone. Example - 2019-10-25T00:00:00Z",
            "format": "date-time",
            "example": "2023-04-28T10:57:51.000Z"
          },
          "vCenterESXiHosts": {
            "type": "string",
            "description": "Name of the vCentre or ESXi host where the backup proxy is deployed.",
            "example": "centerhost123"
          },
          "connectionStatusToVCenter": {
            "type": "string",
            "description": "The connection status to the vCenter. Possible values (Connected,Disconnected)",
            "example": "Disconnected"
          }
        }
      },
      "ListMSPEventsResponse": {
        "type": "object",
        "properties": {
          "events": {
            "type": "array",
            "description": "The list contains event details published by MSP. Empty array is returned when pageToken is provided in request and there are no events available for the pageToken object.",
            "example": [
              {
                "category": "AUDIT",
                "details": {
                  "initiatorType": "ADMIN",
                  "initiatorId": "221",
                  "initiatorName": "initator@admin.com",
                  "adminId": "109",
                  "oldState": null,
                  "newState": {
                    "email": "email@example.com",
                    "firstName": "John",
                    "lastName": "Smith",
                    "phone": "12345678910",
                    "role": 2,
                    "lastLogin": "0001-01-01T00:00:00Z",
                    "creatorAdminId": 1,
                    "isActive": true
                  }
                },
                "feature": "Admin",
                "globalID": "MSP:c8b3866b-aa9e-4a87-a316-133214f7d23f",
                "timeStamp": 1709208497,
                "syslogFacility": 14,
                "syslogSeverity": 6,
                "type": "AdminCreated"
              },
              {
                "category": "ALERT",
                "details": {
                  "customerGlobalId": "c8b3866b-aa9e-4a87-a316-133214f7d23f",
                  "customerName": "sampleCustomer",
                  "productId": 2,
                  "tenantId": "133214f7d23f-c8b3866b-4a87-a316-aa9e",
                  "description": "SaaS Apps and Endpoints would be removed for sampleCustomer in the next 168 hours",
                  "severity": "critical"
                },
                "feature": "Tenant",
                "globalID": "MSP:c8b3866b-aa9e-4a87-a316-133214f7d23f",
                "timeStamp": 1709213497,
                "syslogFacility": 14,
                "syslogSeverity": 1,
                "type": "TenantDeletionInitiated"
              }
            ],
            "items": { "$ref": "#/components/schemas/ListMSPEvents" }
          },
          "nextPageToken": {
            "description": "The token to access the next page of results. Use the received token value in subsequent request's parameter 'pageToken'.\n",
            "type": "string",
            "example": "eyJwYWdlTnVtYmVyIjoyLCJwYWdlU2l6ZSI6NTAwLCAiZmlsdGVycyI6bnVsbH0="
          }
        }
      },
      "ListMSPEvents": {
        "description": "The event details published by MSP. Contains filtered or unexported fields.",
        "type": "object",
        "properties": {
          "category": {
            "description": "The category of the event.",
            "type": "string",
            "enum": ["EVENT", "AUDIT", "ALERT"]
          },
          "details": {
            "description": "All the details of event in JSON schema specific to the eventType. For the JSON schema definition, please refer to <a href=\"https://developer.druva.com/docs/supported-msp-events\">Supported MSP Events</a>",
            "type": "object"
          },
          "feature": {
            "description": "Type of the entity for which the event has happened.",
            "type": "string"
          },
          "globalID": { "description": "Global ID of MSP.", "type": "string" },
          "timeStamp": {
            "description": "The epoch representation of the time at which the event occurred.",
            "type": "integer"
          },
          "syslogFacility": {
            "description": "Syslog standard of defining the event origin/type.",
            "type": "integer"
          },
          "syslogSeverity": {
            "description": "SyslogSeverity represents the severity(0-7) of the event. The severity codes are as follows:\n\n0: Emergency\n\n1: Alert (action must be taken immediately)\n\n2: Critical (critical conditions)\n\n3: Error (error conditions)\n\n4: Warning (warning conditions)\n\n5: Notice (normal but significant condition)\n\n6: Informational (informational messages)\n\n7: Debug (debug-level messages)",
            "type": "integer"
          },
          "type": {
            "description": "Type of the event. For all valid values of event types, please refer to : <a href=\"https://developer.druva.com/docs/supported-msp-events\">Supported MSP Events</a>",
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "OAuth2": {
        "flows": {
          "clientCredentials": {
            "scopes": {},
            "tokenUrl": "https://apis.druva.com/msp/auth/v1/token"
          }
        },
        "type": "oauth2"
      },
      "Bearer": { "type": "apiKey", "name": "Authorization", "in": "header" }
    },
    "headers": {},
    "responses": {},
    "parameters": {}
  },
  "tags": [
    {
      "name": "Customers",
      "description": "Lists the APIs to get information and perform operations on customers managed."
    },
    {
      "name": "Tenants",
      "description": "Lists the APIs to get information and perform operations on tenants managed."
    },
    {
      "name": "Service Plans",
      "description": "Lists the APIs to get information about service plans managed."
    },
    {
      "name": "Admins",
      "description": "Lists the APIs to get information about admins managed."
    },
    {
      "name": "Tasks",
      "description": "Lists the APIs to get information about the tasks triggered."
    },
    {
      "name": "Events",
      "description": "Lists the APIs to get events for MSP and Customer."
    },
    {
      "name": "Reports",
      "description": "Lists the APIs to get reports for various entities."
    },
    {
      "name": "Hybrid Workloads Reports",
      "description": "Lists the APIs to get MSP Hybrid Workload reports data."
    },
    {
      "name": "Endpoints Reports",
      "description": "Lists the APIs to get MSP Endpoints reports data."
    },
    {
      "name": "Cyber Resilience Reports",
      "description": "Lists the APIs to get MSP Cyber Resilience reports data."
    }
  ],
  "security": [],
  "x-readme": { "explorer-enabled": true, "proxy-enabled": true }
}